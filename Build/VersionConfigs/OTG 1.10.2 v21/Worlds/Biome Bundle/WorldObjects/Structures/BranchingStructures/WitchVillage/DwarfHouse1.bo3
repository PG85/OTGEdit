
#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: LordSmellyPants

# A short description of this BO3 object
Description: No description given

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: false

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 0.5

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: false

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestSolidBlock

# The height limits for the BO3.
MinHeight: 52

MaxHeight: 70

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: AIR,STONE,DIRT,GRASS,GRAVEL,31:1,48

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 50

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
Block(-3,-3,-1,SMOOTH_BRICK)
Block(-3,-3,0,SMOOTH_BRICK)
Block(-3,-3,1,SMOOTH_BRICK)
Block(-3,-2,-1,SMOOTH_BRICK)
Block(-3,-2,0,SMOOTH_BRICK)
Block(-3,-2,1,SMOOTH_BRICK)
Block(-3,-1,-1,SMOOTH_BRICK)
Block(-3,-1,0,SMOOTH_BRICK)
Block(-3,-1,1,SMOOTH_BRICK)
Block(-3,0,-1,SMOOTH_STAIRS:0)
Block(-3,0,1,SMOOTH_STAIRS:0)
Block(-3,1,-1,SMOOTH_STAIRS:4)
Block(-3,1,1,SMOOTH_STAIRS:4)
Block(-3,2,-1,SMOOTH_STAIRS:0)
Block(-3,2,0,SMOOTH_BRICK:3)
Block(-3,2,1,SMOOTH_STAIRS:0)
Block(-3,3,0,SMOOTH_STAIRS:0)
Block(-3,6,0,SMOOTH_BRICK:3)
Block(-3,7,-1,WOOD_STEP:13)
Block(-3,7,0,SMOOTH_BRICK)
Block(-3,7,1,WOOD_STEP:13)
Block(-3,8,0,WOOD_DOUBLE_STEP:5)
Block(-3,9,0,WOOD_STEP:5)
Block(-2,-3,-1,SMOOTH_BRICK)
Block(-2,-3,0,SMOOTH_BRICK)
Block(-2,-3,1,SMOOTH_BRICK)
Block(-2,-2,-1,SMOOTH_BRICK)
Block(-2,-2,0,SMOOTH_BRICK)
Block(-2,-2,1,SMOOTH_BRICK)
Block(-2,-1,-1,SMOOTH_BRICK)
Block(-2,-1,0,SMOOTH_BRICK)
Block(-2,-1,1,SMOOTH_BRICK)
Block(-2,0,-1,SMOOTH_BRICK)
Block(-2,0,0,WOODEN_DOOR:0)
Block(-2,0,1,SMOOTH_BRICK)
Block(-2,1,-2,SMOOTH_STAIRS:6)
Block(-2,1,-1,SMOOTH_BRICK)
Block(-2,1,0,WOODEN_DOOR:8)
Block(-2,1,1,SMOOTH_BRICK)
Block(-2,1,2,SMOOTH_STAIRS:7)
Block(-2,2,-2,SMOOTH_STAIRS:2)
Block(-2,2,-1,SMOOTH_BRICK)
Block(-2,2,0,SMOOTH_BRICK)
Block(-2,2,1,SMOOTH_BRICK)
Block(-2,2,2,SMOOTH_STAIRS:3)
Block(-2,3,-1,SMOOTH_STAIRS:0)
Block(-2,3,0,SMOOTH_BRICK)
Block(-2,3,1,SMOOTH_STAIRS:0)
Block(-2,4,-1,SMOOTH_STAIRS:4)
Block(-2,4,0,SMOOTH_STAIRS:4)
Block(-2,4,1,SMOOTH_STAIRS:4)
Block(-2,5,-1,SMOOTH_BRICK)
Block(-2,5,0,THIN_GLASS)
Block(-2,5,1,SMOOTH_BRICK)
Block(-2,6,-1,SMOOTH_BRICK)
Block(-2,6,0,SMOOTH_BRICK)
Block(-2,6,1,SMOOTH_BRICK)
Block(-2,7,-1,SMOOTH_BRICK)
Block(-2,7,1,SMOOTH_BRICK)
Block(-2,8,-2,WOOD_STEP:5)
Block(-2,8,-1,WOOD_DOUBLE_STEP:5)
Block(-2,8,1,WOOD_DOUBLE_STEP:5)
Block(-2,8,2,WOOD_STEP:5)
Block(-2,9,-1,WOOD_STEP:5)
Block(-2,9,0,WOOD_STEP:13)
Block(-2,9,1,WOOD_STEP:5)
Block(-1,-3,-2,SMOOTH_BRICK)
Block(-1,-3,-1,SMOOTH_BRICK)
Block(-1,-3,0,SMOOTH_BRICK)
Block(-1,-3,1,SMOOTH_BRICK)
Block(-1,-3,2,SMOOTH_BRICK)
Block(-1,-2,-2,SMOOTH_BRICK)
Block(-1,-2,-1,SMOOTH_BRICK)
Block(-1,-2,0,SMOOTH_BRICK)
Block(-1,-2,1,SMOOTH_BRICK)
Block(-1,-2,2,SMOOTH_BRICK)
Block(-1,-1,-2,SMOOTH_BRICK)
Block(-1,-1,-1,WOOL)
Block(-1,-1,0,WOOL:4)
Block(-1,-1,1,WOOL)
Block(-1,-1,2,SMOOTH_BRICK)
Block(-1,0,-2,SMOOTH_BRICK)
Block(-1,0,1,WOOD_STAIRS:1)
Block(-1,0,2,SMOOTH_BRICK)
Block(-1,1,-2,SMOOTH_BRICK)
Block(-1,1,2,SMOOTH_BRICK)
Block(-1,2,-2,SMOOTH_BRICK)
Block(-1,2,2,SMOOTH_BRICK)
Block(-1,3,-2,SMOOTH_STAIRS:2)
Block(-1,3,2,SMOOTH_STAIRS:3)
Block(-1,4,-2,SMOOTH_STAIRS:6)
Block(-1,4,2,SMOOTH_STAIRS:7)
Block(-1,5,-2,SMOOTH_BRICK)
Block(-1,5,-1,SMOOTH_STAIRS:7)
Block(-1,5,1,SMOOTH_STAIRS:6)
Block(-1,5,2,SMOOTH_BRICK)
Block(-1,6,-2,SMOOTH_BRICK)
Block(-1,6,-1,SMOOTH_BRICK)
Block(-1,6,0,SMOOTH_BRICK)
Block(-1,6,1,SMOOTH_BRICK)
Block(-1,6,2,SMOOTH_BRICK)
Block(-1,7,-3,WOOD_STEP:13)
Block(-1,7,-2,SMOOTH_BRICK)
Block(-1,7,2,SMOOTH_BRICK)
Block(-1,7,3,WOOD_STEP:13)
Block(-1,8,-2,WOOD_DOUBLE_STEP:5)
Block(-1,8,2,WOOD_DOUBLE_STEP:5)
Block(-1,9,-2,WOOD_STEP:5)
Block(-1,9,-1,WOOD_STEP:13)
Block(-1,9,1,WOOD_STEP:13)
Block(-1,9,2,WOOD_STEP:5)
Block(-1,10,0,WOOD_DOUBLE_STEP:5)
Block(0,-3,-3,SMOOTH_BRICK)
Block(0,-3,-2,SMOOTH_BRICK)
Block(0,-3,-1,SMOOTH_BRICK)
Block(0,-3,0,SMOOTH_BRICK)
Block(0,-3,1,SMOOTH_BRICK)
Block(0,-3,2,SMOOTH_BRICK)
Block(0,-3,3,SMOOTH_BRICK)
Block(0,-2,-3,SMOOTH_BRICK)
Block(0,-2,-2,SMOOTH_BRICK)
Block(0,-2,-1,SMOOTH_BRICK)
Block(0,-2,0,SMOOTH_BRICK)
Block(0,-2,1,SMOOTH_BRICK)
Block(0,-2,2,SMOOTH_BRICK)
Block(0,-2,3,SMOOTH_BRICK)
Block(0,-1,-3,SMOOTH_BRICK)
Block(0,-1,-2,WOOL)
Block(0,-1,-1,WOOL:4)
Block(0,-1,0,WOOL)
Block(0,-1,1,WOOL:4)
Block(0,-1,2,WOOL)
Block(0,-1,3,SMOOTH_BRICK)
Block(0,0,-3,SMOOTH_STAIRS:2)
Block(0,0,-2,NOTE_BLOCK)
Block(0,0,1,FENCE)
Block(0,0,2,STEP:8)
Block(0,0,3,SMOOTH_STAIRS:3)
Block(0,1,-3,SMOOTH_STAIRS:6)
Block(0,1,1,WOOD_PLATE)
Block(0,1,2,REDSTONE_TORCH_ON:5)
Block(0,1,3,SMOOTH_STAIRS:7)
Block(0,2,-3,SMOOTH_STAIRS:2)
Block(0,2,-2,SMOOTH_BRICK)
Block(0,2,2,SMOOTH_BRICK)
Block(0,2,3,SMOOTH_STAIRS:3)
Block(0,3,-2,SMOOTH_STAIRS:2)
Block(0,3,2,SMOOTH_STAIRS:3)
Block(0,4,-2,SMOOTH_STAIRS:6)
Block(0,4,2,SMOOTH_STAIRS:7)
Block(0,5,-2,THIN_GLASS)
Block(0,5,2,THIN_GLASS)
Block(0,6,-3,SMOOTH_BRICK:3)
Block(0,6,-2,SMOOTH_BRICK)
Block(0,6,-1,SMOOTH_BRICK)
Block(0,6,0,SMOOTH_BRICK)
Block(0,6,1,SMOOTH_BRICK)
Block(0,6,2,SMOOTH_BRICK)
Block(0,6,3,SMOOTH_BRICK:3)
Block(0,7,-3,SMOOTH_BRICK)
Block(0,7,3,SMOOTH_BRICK)
Block(0,8,-3,WOOD_DOUBLE_STEP:5)
Block(0,8,3,WOOD_DOUBLE_STEP:5)
Block(0,9,-3,WOOD_STEP:5)
Block(0,9,-2,WOOD_STEP:13)
Block(0,9,2,WOOD_STEP:13)
Block(0,9,3,WOOD_STEP:5)
Block(0,10,-2,WOOD_DOUBLE_STEP:5)
Block(0,10,-1,WOOD_STEP:5)
Block(0,10,0,WOOD_STEP:13)
Block(0,10,1,WOOD_STEP:5)
Block(0,10,2,WOOD_DOUBLE_STEP:5)
Block(0,11,0,WOOD_STEP:5)
Block(1,-3,-2,SMOOTH_BRICK)
Block(1,-3,-1,SMOOTH_BRICK)
Block(1,-3,0,SMOOTH_BRICK)
Block(1,-3,1,SMOOTH_BRICK)
Block(1,-3,2,SMOOTH_BRICK)
Block(1,-2,-2,SMOOTH_BRICK)
Block(1,-2,-1,SMOOTH_BRICK)
Block(1,-2,0,SMOOTH_BRICK)
Block(1,-2,1,SMOOTH_BRICK)
Block(1,-2,2,SMOOTH_BRICK)
Block(1,-1,-2,SMOOTH_BRICK)
Block(1,-1,-1,WOOL)
Block(1,-1,0,WOOL:4)
Block(1,-1,1,WOOL)
Block(1,-1,2,SMOOTH_BRICK)
Block(1,0,-2,SMOOTH_BRICK)
Block(1,0,1,WOOD_STAIRS:0)
Block(1,0,2,SMOOTH_BRICK)
Block(1,1,-2,SMOOTH_BRICK)
Block(1,1,2,SMOOTH_BRICK)
Block(1,2,-2,SMOOTH_BRICK)
Block(1,2,-1,SMOOTH_STAIRS:4)
Block(1,2,1,SMOOTH_STAIRS:4)
Block(1,2,2,SMOOTH_BRICK)
Block(1,3,-2,SMOOTH_STAIRS:2)
Block(1,3,-1,BOOKSHELF)
RandomBlock(1,3,1,FLOWER_POT,../../nbt/Misc/FlowerPot1.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot2.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot3.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot81.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot4.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot5.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot6.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot7.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot8.nbt,100)
Block(1,3,2,SMOOTH_STAIRS:3)
Block(1,4,-2,SMOOTH_STAIRS:6)
RandomBlock(1,4,-1,FLOWER_POT,../../nbt/Misc/FlowerPot1.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot2.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot3.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot81.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot4.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot5.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot6.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot7.nbt,22,FLOWER_POT,../../nbt/Misc/FlowerPot8.nbt,100)
Block(1,4,2,SMOOTH_STAIRS:7)
Block(1,5,-2,SMOOTH_BRICK)
Block(1,5,-1,SMOOTH_STAIRS:7)
Block(1,5,1,SMOOTH_STAIRS:6)
Block(1,5,2,SMOOTH_BRICK)
Block(1,6,-2,SMOOTH_BRICK)
Block(1,6,-1,SMOOTH_BRICK)
Block(1,6,0,SMOOTH_BRICK)
Block(1,6,1,SMOOTH_BRICK)
Block(1,6,2,SMOOTH_BRICK)
Block(1,7,-3,WOOD_STEP:13)
Block(1,7,-2,SMOOTH_BRICK)
Block(1,7,2,SMOOTH_BRICK)
Block(1,7,3,WOOD_STEP:13)
Block(1,8,-2,WOOD_DOUBLE_STEP:5)
Block(1,8,2,WOOD_DOUBLE_STEP:5)
Block(1,9,-2,WOOD_STEP:5)
Block(1,9,-1,WOOD_STEP:13)
Block(1,9,1,WOOD_STEP:13)
Block(1,9,2,WOOD_STEP:5)
Block(1,10,0,WOOD_DOUBLE_STEP:5)
Block(2,-3,-1,SMOOTH_BRICK)
Block(2,-3,0,SMOOTH_BRICK)
Block(2,-3,1,SMOOTH_BRICK)
Block(2,-2,-1,SMOOTH_BRICK)
Block(2,-2,0,SMOOTH_BRICK)
Block(2,-2,1,SMOOTH_BRICK)
Block(2,-1,-1,SMOOTH_BRICK)
Block(2,-1,0,WOOL)
Block(2,-1,1,SMOOTH_BRICK)
Block(2,0,-1,SMOOTH_BRICK)
RandomBlock(2,0,0,47,20,58,20,JUKEBOX:1,../../nbt/Misc/RecordPlayer3.nbt,50,JUKEBOX:1,../../nbt/Misc/RecordPlayer4.nbt,50,JUKEBOX:1,../../nbt/Misc/RecordPlayer5.nbt,50,JUKEBOX:1,../../nbt/Misc/RecordPlayer6.nbt,50,JUKEBOX:1,../../nbt/Misc/RecordPlayer7.nbt,50,JUKEBOX:1,../../nbt/Misc/RecordPlayer8.nbt,50,JUKEBOX:1,../../nbt/Misc/RecordPlayer9.nbt,50,JUKEBOX:1,../../nbt/Misc/RecordPlayer10.nbt,50,AIR,100)
Block(2,0,1,SMOOTH_BRICK)
Block(2,1,-2,SMOOTH_STAIRS:6)
Block(2,1,-1,SMOOTH_BRICK)
Block(2,1,1,SMOOTH_BRICK)
Block(2,1,2,SMOOTH_STAIRS:7)
Block(2,2,-2,SMOOTH_STAIRS:2)
Block(2,2,-1,SMOOTH_BRICK)
Block(2,2,0,SMOOTH_BRICK)
Block(2,2,1,SMOOTH_BRICK)
Block(2,2,2,SMOOTH_STAIRS:3)
Block(2,3,-1,SMOOTH_STAIRS:1)
Block(2,3,0,SMOOTH_STAIRS:1)
Block(2,3,1,SMOOTH_STAIRS:1)
Block(2,4,-1,SMOOTH_STAIRS:5)
Block(2,4,0,SMOOTH_STAIRS:5)
Block(2,4,1,SMOOTH_STAIRS:5)
Block(2,5,-1,SMOOTH_BRICK)
Block(2,5,0,THIN_GLASS)
Block(2,5,1,SMOOTH_BRICK)
Block(2,6,-1,SMOOTH_BRICK)
Block(2,6,0,SMOOTH_BRICK)
Block(2,6,1,SMOOTH_BRICK)
Block(2,7,-1,SMOOTH_BRICK)
Block(2,7,1,SMOOTH_BRICK)
Block(2,8,-2,WOOD_STEP:5)
Block(2,8,-1,WOOD_DOUBLE_STEP:5)
Block(2,8,1,WOOD_DOUBLE_STEP:5)
Block(2,8,2,WOOD_STEP:5)
Block(2,9,-1,WOOD_STEP:5)
Block(2,9,0,WOOD_STEP:13)
Block(2,9,1,WOOD_STEP:5)
Block(3,-3,-1,SMOOTH_BRICK)
Block(3,-3,0,SMOOTH_BRICK)
Block(3,-3,1,SMOOTH_BRICK)
Block(3,-2,-1,SMOOTH_BRICK)
Block(3,-2,0,SMOOTH_BRICK)
Block(3,-2,1,SMOOTH_BRICK)
Block(3,-1,-1,SMOOTH_BRICK)
Block(3,-1,0,SMOOTH_BRICK)
Block(3,-1,1,SMOOTH_BRICK)
Block(3,0,-1,SMOOTH_STAIRS:1)
Block(3,0,0,SMOOTH_STAIRS:1)
Block(3,0,1,SMOOTH_STAIRS:1)
Block(3,1,-1,SMOOTH_STAIRS:5)
Block(3,1,0,SMOOTH_STAIRS:5)
Block(3,1,1,SMOOTH_STAIRS:5)
Block(3,2,-1,SMOOTH_STAIRS:1)
Block(3,2,0,SMOOTH_STAIRS:1)
Block(3,2,1,SMOOTH_STAIRS:1)
Block(3,6,0,SMOOTH_BRICK:3)
Block(3,7,-1,WOOD_STEP:13)
Block(3,7,0,SMOOTH_BRICK)
Block(3,7,1,WOOD_STEP:13)
Block(3,8,0,WOOD_DOUBLE_STEP:5)
Block(3,9,0,WOOD_STEP:5)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#   BlockCheck(0,-1,0,GRASS,DIRT)  Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,0,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object
BlockCheckNot(0,0,0,STATIONARY_WATER) 

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
Branch(0,-1,0,PathPatch,NORTH,100)
Branch(5,0,-1,RuinsBasementWall1x1,NORTH,100)
Branch(5,0,-2,RuinsBasementWall1x1,NORTH,100)
Branch(5,0,-3,RuinsBasementWall1x1,NORTH,100)
WeightedBranch(-5,0,3,RuinsBasementBrickWallBush5x6,NORTH,25,RuinsBasementBrickfloor4x5,NORTH,25,RuinsBasementGravelBush3x3,NORTH,25,WitchHutCauldronOutdoor,NORTH,25,100)