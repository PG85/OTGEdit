
#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: LordSmellyPants

# A short description of this BO3 object
Description: No description given

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: false

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: false

# The spawn height of the BO3 - atMinY, randomY, highestBlock or highestSolidBlock.
SpawnHeight: randomY

# The offset from the spawn height to spawn this BO3
# Ex. SpawnHeight = highestSolidBlock, SpawnHeightOffset = 3; This object will spawn 3 blocks above the highest solid block
SpawnHeightOffset: 0

# A random amount to offset the spawn location from the spawn offset height
# Ex. SpawnHeightOffset = 3, SpawnHeightVariance = 3; This object will spawn 3 to 6 blocks above the original spot it would have spawned
SpawnHeightVariance: 0

##############################
# Height Limits for the BO3. #
##############################

# When in randomY mode used as the minimum Y or in atMinY mode as the actual Y to spawn this BO3 at.
MinHeight: 0

# When in randomY mode used as the maximum Y to spawn this BO3 at.
MaxHeight: 200

######################
# Extrusion settings #
######################

# The style of extrusion you wish to use - BottomDown, TopUp, None (Default)
ExtrudeMode: None

# The blocks to extrude your BO3 through
ExtrudeThroughBlocks: AIR

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: STONE:1,STONE:3,STONE:5,DIRT:1,STONE,DIRT,SAND,GRAVEL,CLAY,GRASS,OBSIDIAN,STATIONARY_LAVA,STATIONARY_WATER,COAL_ORE,IRON_ORE,GOLD_ORE,REDSTONE_ORE,DIAMOND_ORE,LAPIS_ORE,EMERALD_ORE,106,AIR,GRASS,DIRT:2

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 100

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: dontPlace


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
#  So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
#  the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
#  fails, a 100% percent chance to have the contents of anotherchest.nbt.
# MinecraftObject(x,y,z,name)
#  Spawns an object in the Mojang NBT structure format. For example, 
#  MinecraftObject(0,0,0,minecraft:igloo/igloo_bottom)
#  spawns the bottom part of an igloo.
Block(-1,-31,-1,SMOOTH_BRICK)
Block(-1,-31,0,SMOOTH_BRICK)
Block(-1,-31,1,SMOOTH_BRICK)
Block(-1,-30,-1,SMOOTH_BRICK)
Block(-1,-30,0,SMOOTH_BRICK)
Block(-1,-30,1,SMOOTH_BRICK)
Block(-1,-29,-1,SMOOTH_BRICK)
Block(-1,-29,0,SMOOTH_BRICK)
Block(-1,-29,1,SMOOTH_BRICK)
Block(-1,-28,-1,SMOOTH_BRICK)
Block(-1,-28,0,SMOOTH_BRICK)
Block(-1,-28,1,SMOOTH_BRICK)
Block(-1,-27,-1,SMOOTH_BRICK)
Block(-1,-27,0,SMOOTH_BRICK)
Block(-1,-27,1,SMOOTH_BRICK)
Block(-1,-26,-1,SMOOTH_BRICK)
Block(-1,-26,0,SMOOTH_BRICK)
Block(-1,-26,1,SMOOTH_BRICK)
Block(-1,-25,-1,SMOOTH_BRICK)
Block(-1,-25,0,SMOOTH_BRICK)
Block(-1,-25,1,SMOOTH_BRICK)
Block(-1,-24,-1,SMOOTH_BRICK)
Block(-1,-24,0,SMOOTH_BRICK)
Block(-1,-24,1,SMOOTH_BRICK)
Block(-1,-23,-1,SMOOTH_BRICK)
Block(-1,-23,0,SMOOTH_BRICK)
Block(-1,-23,1,SMOOTH_BRICK)
Block(-1,-22,-1,SMOOTH_BRICK)
Block(-1,-22,0,SMOOTH_BRICK)
Block(-1,-22,1,SMOOTH_BRICK)
Block(-1,-21,-1,SMOOTH_BRICK)
Block(-1,-21,0,SMOOTH_BRICK)
Block(-1,-21,1,SMOOTH_BRICK)
Block(-1,-20,-1,SMOOTH_BRICK)
Block(-1,-20,0,SMOOTH_BRICK)
Block(-1,-20,1,SMOOTH_BRICK)
Block(-1,-19,-1,SMOOTH_BRICK)
Block(-1,-19,0,SMOOTH_BRICK)
Block(-1,-19,1,SMOOTH_BRICK)
Block(-1,-18,0,SMOOTH_BRICK)
Block(-1,-17,0,SMOOTH_BRICK)
Block(-1,-16,0,SMOOTH_BRICK)
Block(-1,-15,-1,SMOOTH_BRICK)
Block(-1,-15,0,SMOOTH_BRICK)
Block(-1,-15,1,SMOOTH_BRICK)
Block(-1,-14,0,SMOOTH_BRICK)
Block(-1,-13,0,SMOOTH_BRICK)
Block(-1,-12,0,SMOOTH_BRICK)
Block(-1,-11,-1,SMOOTH_BRICK)
Block(-1,-11,0,SMOOTH_BRICK)
Block(-1,-11,1,SMOOTH_BRICK)
Block(-1,-10,0,SMOOTH_BRICK)
Block(-1,-9,0,SMOOTH_BRICK)
Block(-1,-8,0,SMOOTH_BRICK)
Block(-1,-7,-1,SMOOTH_STAIRS:2)
Block(-1,-7,0,SMOOTH_STAIRS:0)
Block(-1,-7,1,SMOOTH_STAIRS)
Block(-1,-2,-1,SMOOTH_STAIRS:6)
Block(-1,-2,0,SMOOTH_STAIRS:4)
Block(-1,-2,1,SMOOTH_STAIRS:7)
Block(0,-31,-1,SMOOTH_BRICK)
Block(0,-31,0,SMOOTH_BRICK)
Block(0,-31,1,SMOOTH_BRICK)
Block(0,-30,-1,SMOOTH_BRICK)
Block(0,-30,0,SMOOTH_BRICK)
Block(0,-30,1,SMOOTH_BRICK)
Block(0,-29,-1,SMOOTH_BRICK)
Block(0,-29,0,SMOOTH_BRICK)
Block(0,-29,1,SMOOTH_BRICK)
Block(0,-28,-1,SMOOTH_BRICK)
Block(0,-28,0,SMOOTH_BRICK)
Block(0,-28,1,SMOOTH_BRICK)
Block(0,-27,-1,SMOOTH_BRICK)
Block(0,-27,0,SMOOTH_BRICK)
Block(0,-27,1,SMOOTH_BRICK)
Block(0,-26,-1,SMOOTH_BRICK)
Block(0,-26,0,SMOOTH_BRICK)
Block(0,-26,1,SMOOTH_BRICK)
Block(0,-25,-1,SMOOTH_BRICK)
Block(0,-25,0,SMOOTH_BRICK)
Block(0,-25,1,SMOOTH_BRICK)
Block(0,-24,-1,SMOOTH_BRICK)
Block(0,-24,0,SMOOTH_BRICK)
Block(0,-24,1,SMOOTH_BRICK)
Block(0,-23,-1,SMOOTH_BRICK)
Block(0,-23,0,SMOOTH_BRICK)
Block(0,-23,1,SMOOTH_BRICK)
Block(0,-22,-1,SMOOTH_BRICK)
Block(0,-22,0,SMOOTH_BRICK)
Block(0,-22,1,SMOOTH_BRICK)
Block(0,-21,-1,SMOOTH_BRICK)
Block(0,-21,0,SMOOTH_BRICK)
Block(0,-21,1,SMOOTH_BRICK)
Block(0,-20,-1,SMOOTH_BRICK)
Block(0,-20,0,SMOOTH_BRICK)
Block(0,-20,1,SMOOTH_BRICK)
Block(0,-19,-1,SMOOTH_BRICK)
Block(0,-19,0,SMOOTH_BRICK)
Block(0,-19,1,SMOOTH_BRICK)
Block(0,-18,-1,SMOOTH_BRICK)
Block(0,-18,0,SMOOTH_BRICK)
Block(0,-18,1,SMOOTH_BRICK)
Block(0,-17,-1,SMOOTH_BRICK)
Block(0,-17,0,SMOOTH_BRICK)
Block(0,-17,1,SMOOTH_BRICK)
Block(0,-16,-1,SMOOTH_BRICK)
Block(0,-16,0,SMOOTH_BRICK)
Block(0,-16,1,SMOOTH_BRICK)
Block(0,-15,-1,SMOOTH_BRICK)
Block(0,-15,0,SMOOTH_BRICK)
Block(0,-15,1,SMOOTH_BRICK)
Block(0,-14,-1,SMOOTH_BRICK)
Block(0,-14,0,SMOOTH_BRICK)
Block(0,-14,1,SMOOTH_BRICK)
Block(0,-13,-1,SMOOTH_BRICK)
Block(0,-13,0,SMOOTH_BRICK)
Block(0,-13,1,SMOOTH_BRICK)
Block(0,-12,-1,SMOOTH_BRICK)
Block(0,-12,0,SMOOTH_BRICK)
Block(0,-12,1,SMOOTH_BRICK)
Block(0,-11,-1,SMOOTH_BRICK)
Block(0,-11,0,SMOOTH_BRICK)
Block(0,-11,1,SMOOTH_BRICK)
Block(0,-10,-1,SMOOTH_BRICK)
Block(0,-10,0,SMOOTH_BRICK)
Block(0,-10,1,SMOOTH_BRICK)
Block(0,-9,-1,SMOOTH_BRICK)
Block(0,-9,0,SMOOTH_BRICK)
Block(0,-9,1,SMOOTH_BRICK)
Block(0,-8,-1,SMOOTH_BRICK)
Block(0,-8,0,SMOOTH_BRICK)
Block(0,-8,1,SMOOTH_BRICK)
Block(0,-7,-1,SMOOTH_STAIRS:2)
Block(0,-7,0,SMOOTH_BRICK)
Block(0,-7,1,SMOOTH_STAIRS)
Block(0,-6,0,SMOOTH_BRICK)
Block(0,-5,0,SMOOTH_BRICK)
Block(0,-4,0,SMOOTH_BRICK)
Block(0,-3,0,SMOOTH_BRICK:3)
Block(0,-2,-1,SMOOTH_STAIRS:6)
Block(0,-2,0,NETHERRACK)
Block(0,-2,1,SMOOTH_STAIRS:7)
Block(0,-1,0,FIRE:15)
Block(1,-31,-1,SMOOTH_BRICK)
Block(1,-31,0,SMOOTH_BRICK)
Block(1,-31,1,SMOOTH_BRICK)
Block(1,-30,-1,SMOOTH_BRICK)
Block(1,-30,0,SMOOTH_BRICK)
Block(1,-30,1,SMOOTH_BRICK)
Block(1,-29,-1,SMOOTH_BRICK)
Block(1,-29,0,SMOOTH_BRICK)
Block(1,-29,1,SMOOTH_BRICK)
Block(1,-28,-1,SMOOTH_BRICK)
Block(1,-28,0,SMOOTH_BRICK)
Block(1,-28,1,SMOOTH_BRICK)
Block(1,-27,-1,SMOOTH_BRICK)
Block(1,-27,0,SMOOTH_BRICK)
Block(1,-27,1,SMOOTH_BRICK)
Block(1,-26,-1,SMOOTH_BRICK)
Block(1,-26,0,SMOOTH_BRICK)
Block(1,-26,1,SMOOTH_BRICK)
Block(1,-25,-1,SMOOTH_BRICK)
Block(1,-25,0,SMOOTH_BRICK)
Block(1,-25,1,SMOOTH_BRICK)
Block(1,-24,-1,SMOOTH_BRICK)
Block(1,-24,0,SMOOTH_BRICK)
Block(1,-24,1,SMOOTH_BRICK)
Block(1,-23,-1,SMOOTH_BRICK)
Block(1,-23,0,SMOOTH_BRICK)
Block(1,-23,1,SMOOTH_BRICK)
Block(1,-22,-1,SMOOTH_BRICK)
Block(1,-22,0,SMOOTH_BRICK)
Block(1,-22,1,SMOOTH_BRICK)
Block(1,-21,-1,SMOOTH_BRICK)
Block(1,-21,0,SMOOTH_BRICK)
Block(1,-21,1,SMOOTH_BRICK)
Block(1,-20,-1,SMOOTH_BRICK)
Block(1,-20,0,SMOOTH_BRICK)
Block(1,-20,1,SMOOTH_BRICK)
Block(1,-19,-1,SMOOTH_BRICK)
Block(1,-19,0,SMOOTH_BRICK)
Block(1,-19,1,SMOOTH_BRICK)
Block(1,-18,0,SMOOTH_BRICK)
Block(1,-17,0,SMOOTH_BRICK)
Block(1,-16,0,SMOOTH_BRICK)
Block(1,-15,-1,SMOOTH_BRICK)
Block(1,-15,0,SMOOTH_BRICK)
Block(1,-14,0,SMOOTH_BRICK)
Block(1,-14,1,SMOOTH_BRICK)
Block(1,-13,0,SMOOTH_BRICK)
Block(1,-12,0,SMOOTH_BRICK)
Block(1,-11,-1,SMOOTH_BRICK)
Block(1,-11,0,SMOOTH_BRICK)
Block(1,-11,1,SMOOTH_BRICK)
Block(1,-10,0,SMOOTH_BRICK)
Block(1,-9,0,SMOOTH_BRICK)
Block(1,-8,0,SMOOTH_BRICK)
Block(1,-8,1,SMOOTH_STAIRS:7)
Block(1,-7,-1,SMOOTH_STAIRS:1)
Block(1,-7,0,SMOOTH_STAIRS:1)
Block(1,-7,1,SMOOTH_STAIRS:1)
Block(1,-2,-1,SMOOTH_STAIRS:6)
Block(1,-2,0,SMOOTH_STAIRS:5)
Block(1,-2,1,SMOOTH_STAIRS:5)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#   BlockCheck(0,-1,0,GRASS,DIRT)  Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,AIR)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
