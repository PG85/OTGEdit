
#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: LordSmellyPants

# A short description of this BO3 object
Description: Converted version of the BO2 HauntedTwisted1

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteAll


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: true

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 4.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: true

# The spawn height of the BO3 - atMinY, randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestSolidBlock

# The offset from the spawn height to spawn this BO3
# Ex. SpawnHeight = highestSolidBlock, SpawnHeightOffset = 3; This object will spawn 3 blocks above the highest solid block
SpawnHeightOffset: 0

# A random amount to offset the spawn location from the spawn offset height
# Ex. SpawnHeightOffset = 3, SpawnHeightVariance = 3; This object will spawn 3 to 6 blocks above the original spot it would have spawned
SpawnHeightVariance: 0

##############################
# Height Limits for the BO3. #
##############################

# When in randomY mode used as the minimum Y or in atMinY mode as the actual Y to spawn this BO3 at.
MinHeight: 46

# When in randomY mode used as the maximum Y to spawn this BO3 at.
MaxHeight: 70

######################
# Extrusion settings #
######################

# The style of extrusion you wish to use - BottomDown, TopUp, None (Default)
ExtrudeMode: None

# The blocks to extrude your BO3 through
ExtrudeThroughBlocks: AIR

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: STONE:1,STONE:3,STONE:5,DIRT:1,DIRT,SAND,GRASS,DIRT:2,STATIONARY_WATER,HARD_CLAY,STAINED_CLAY,CLAY,SANDSTONE,SAND:1,AIR,STONE,GRAVEL,LONG_GRASS,LONG_GRASS:1,LONG_GRASS:2,DEAD_BUSH,YELLOW_FLOWER,RED_ROSE,BROWN_MUSHROOM,RED_MUSHROOM

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 0

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
#  So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
#  the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
#  fails, a 100% percent chance to have the contents of anotherchest.nbt.
# MinecraftObject(x,y,z,name)
#  Spawns an object in the Mojang NBT structure format. For example, 
#  MinecraftObject(0,0,0,minecraft:igloo/igloo_bottom)
#  spawns the bottom part of an igloo.
Block(-2,8,-7,LOG_2:1)
Block(-2,9,-7,LOG_2:1)
Block(14,0,-4,LOG_2:1)
Block(10,7,-6,LOG_2:1)
Block(14,1,-4,LOG_2:1)
Block(10,6,-6,LOG_2:1)
Block(0,9,-8,LOG_2:1)
Block(-6,-3,-1,LOG_2:1)
Block(13,0,-8,LOG_2:1)
Block(10,1,-6,LOG_2:5)
Block(-6,-2,-1,LOG_2:1)
Block(10,0,-6,LOG_2:5)
Block(-6,-1,-1,LOG_2:1)
Block(13,2,-8,LOG_2:1)
Block(13,1,-8,LOG_2:1)
Block(10,5,-6,LOG_2:1)
Block(-4,-1,-3,LOG_2:1)
Block(14,-1,-3,LOG_2:1)
Block(13,3,-8,LOG_2:1)
Block(10,4,-6,LOG_2:1)
Block(14,-2,-3,LOG_2:1)
Block(10,3,-6,LOG_2:1)
Block(14,-3,-3,LOG_2:1)
Block(10,2,-6,LOG_2:1)
Block(-3,0,-2,LOG_2:1)
Block(-3,1,-2,LOG_2:1)
Block(-3,2,-2,LOG_2:1)
Block(0,10,-7,LOG_2:1)
Block(-3,3,-2,LOG_2:1)
Block(5,9,-10,LOG_2:1)
Block(0,11,-7,LOG_2:1)
Block(-3,4,-2,LOG_2:1)
Block(0,12,-7,LOG_2:1)
Block(-3,5,-2,LOG_2:1)
Block(-3,6,-2,LOG_2:1)
Block(-3,7,-2,LOG_2:1)
Block(-3,8,-2,LOG_2:1)
Block(-4,-1,-2,LOG_2:1)
Block(-1,10,-9,LOG_2:1)
Block(-4,3,1,LOG_2:1)
Block(-1,11,-9,LOG_2:1)
Block(-4,2,1,LOG_2:1)
Block(-2,10,-4,LOG_2:1)
Block(-4,1,1,LOG_2:1)
Block(-4,0,1,LOG_2:1)
Block(10,-3,-6,LOG_2:1)
Block(-2,8,-8,LOG_2:1)
Block(-2,9,-8,LOG_2:1)
Block(0,11,-6,LOG_2:1)
Block(0,10,-6,LOG_2:1)
Block(10,-2,-6,LOG_2:1)
Block(10,-1,-6,LEAVES_2:13)
Block(14,1,-5,LOG_2:1)
Block(10,8,-7,LOG_2:1)
Block(14,2,-5,LOG_2:1)
Block(10,7,-7,LOG_2:1)
Block(10,6,-7,LOG_2:1)
Block(14,0,-5,LOG_2:1)
Block(10,5,-7,LOG_2:1)
Block(0,12,-6,LOG_2:1)
Block(0,9,-9,LOG_2:1)
Block(10,0,-7,LOG_2:9)
Block(13,1,-7,LOG_2:1)
Block(13,0,-7,LOG_2:1)
Block(13,3,-7,LOG_2:1)
Block(13,2,-7,LOG_2:1)
Block(12,-1,-5,LOG_2:1)
Block(10,4,-7,LOG_2:1)
Block(13,5,-7,LOG_2:1)
Block(10,3,-7,LOG_2:1)
Block(13,4,-7,LOG_2:1)
Block(12,-3,-5,LOG_2:1)
Block(10,2,-7,LOG_2:5)
Block(12,-2,-5,LOG_2:1)
Block(10,1,-7,LOG_2:9)
Block(-3,0,-1,LOG_2:1)
Block(-3,1,-1,LOG_2:1)
Block(-3,2,-1,LOG_2:1)
Block(-3,3,-1,LOG_2:1)
Block(-3,4,-1,LOG_2:1)
Block(-3,5,-1,LOG_2:1)
Block(-3,6,-1,LOG_2:1)
Block(8,6,-4,LEAVES_2:1)
Block(-5,1,0,LOG_2:1)
Block(5,11,-7,LOG_2:1)
Block(-5,0,0,LOG_2:1)
Block(5,10,-7,LOG_2:1)
Block(-5,3,0,LOG_2:1)
Block(-5,2,0,LOG_2:1)
Block(3,10,-8,LOG_2:1)
Block(-4,-1,-4,LOG_2:9)
Block(-4,-2,-4,LOG_2:1)
Block(-4,-3,-4,LOG_2:9)
Block(3,12,-8,LOG_2:1)
Block(3,11,-8,LOG_2:1)
Block(7,7,-8,LOG_2:1)
Block(-2,9,-5,LOG_2:1)
Block(7,6,-8,LOG_2:1)
Block(-2,6,-5,LOG_2:1)
Block(-4,-3,-1,LOG_2:1)
Block(-2,7,-5,LOG_2:1)
Block(7,9,-8,LOG_2:1)
Block(-4,-2,-1,LOG_2:1)
Block(7,8,-8,LOG_2:1)
Block(-2,8,-5,LOG_2:1)
Block(-4,-1,-1,LOG_2:1)
Block(0,8,-6,LOG_2:1)
Block(13,-1,-8,LOG_2:1)
Block(0,9,-6,LOG_2:1)
Block(13,-2,-8,LOG_2:1)
Block(14,0,-2,LEAVES_2:13)
Block(13,-3,-8,LOG_2:1)
Block(-4,4,-1,LOG_2:1)
Block(-4,3,-1,LOG_2:1)
Block(-4,6,-1,LOG_2:1)
Block(-4,5,-1,LOG_2:1)
Block(7,11,-7,LOG_2:1)
Block(7,10,-7,LOG_2:1)
Block(-4,0,-1,LOG_2:1)
Block(-5,0,1,LOG_2:1)
Block(-4,2,-1,LOG_2:1)
Block(-5,2,1,LOG_2:1)
Block(-4,1,-1,LOG_2:1)
Block(-5,1,1,LOG_2:1)
Block(5,10,-9,LOG_2:1)
Block(5,11,-9,LOG_2:1)
Block(-6,5,-3,LOG_2:1)
Block(-6,4,-3,LOG_2:1)
Block(-2,8,-6,LOG_2:1)
Block(-2,9,-6,LOG_2:1)
Block(7,9,-9,LOG_2:1)
Block(7,8,-9,LOG_2:1)
Block(7,7,-9,LOG_2:1)
Block(-2,7,-6,LOG_2:1)
Block(5,12,-8,LOG_2:1)
Block(5,11,-8,LOG_2:1)
Block(0,9,-7,LOG_2:1)
Block(5,10,-8,LOG_2:1)
Block(11,9,-10,LEAVES_2:1)
Block(14,0,-3,LOG_2:1)
Block(10,2,-5,LOG_2:5)
Block(3,11,-9,LOG_2:1)
Block(3,10,-9,LOG_2:1)
Block(10,0,-5,LEAVES_2:13)
Block(-6,2,0,LOG_2:1)
Block(-6,1,0,LOG_2:1)
Block(10,5,-5,LOG_2:1)
Block(-6,0,0,LOG_2:1)
Block(10,4,-5,LOG_2:5)
Block(10,3,-5,LOG_2:5)
Block(-1,-1,-1,LOG_2:5)
Block(-2,10,-5,LOG_2:1)
Block(-1,-2,-1,LOG_2:5)
Block(-1,-3,-1,LOG_2:1)
Block(3,12,-9,LOG_2:1)
Block(0,10,-5,LOG_2:1)
Block(7,9,-10,LOG_2:1)
Block(0,11,-5,LOG_2:1)
Block(7,7,-6,LOG_2:1)
Block(-2,8,-3,LOG_2:1)
Block(14,5,-8,LEAVES_2:13)
Block(-2,7,-3,LOG_2:1)
Block(-1,9,-8,LOG_2:1)
Block(-2,6,-3,LOG_2:1)
Block(-2,5,-3,LOG_2:1)
Block(-2,4,-3,LOG_2:1)
RandomBlock(-2,3,-3,WEB,50,MOB_SPAWNER,../../Structures/nbt/Spawner/Spider.nbt,50)
Block(-4,6,-3,LOG_2:1)
Block(12,-1,-7,LOG_2:1)
Block(-4,5,-3,LOG_2:1)
Block(10,7,-10,LOG_2:1)
Block(10,6,-10,LOG_2:1)
Block(-4,7,-3,LOG_2:1)
Block(-4,2,-3,LOG_2:1)
Block(-4,1,-3,LOG_2:1)
Block(12,-2,-7,LOG_2:1)
Block(-4,4,-3,LOG_2:1)
Block(12,-3,-7,LOG_2:1)
Block(-4,3,-3,LOG_2:1)
Block(15,-3,-4,LOG_2:1)
Block(-1,9,-7,LOG_2:1)
Block(15,-2,-4,LOG_2:1)
Block(-1,8,-7,LOG_2:1)
Block(15,-1,-4,LOG_2:1)
Block(3,11,-7,LOG_2:1)
Block(14,-1,-6,LOG_2:1)
Block(14,-2,-6,LOG_2:1)
Block(-4,0,-3,LOG_2:1)
Block(1,11,-8,LOG_2:1)
Block(1,12,-8,LOG_2:1)
Block(-3,-1,-1,LOG_2:1)
Block(1,10,-8,LOG_2:1)
Block(5,11,-5,LEAVES_2:1)
Block(9,5,-6,LOG_2:1)
Block(9,4,-6,WEB)
Block(9,7,-6,LOG_2:1)
Block(9,6,-6,LOG_2:1)
Block(14,-3,-6,LOG_2:1)
Block(6,9,-9,LOG_2:1)
Block(6,8,-9,LOG_2:1)
Block(6,7,-9,LOG_2:1)
Block(6,6,-9,LEAVES_2:1)
Block(9,8,-6,LOG_2:1)
Block(7,8,-7,LOG_2:1)
Block(7,7,-7,LOG_2:1)
Block(7,6,-7,LOG_2:1)
Block(-2,6,-4,LOG_2:1)
Block(-2,7,-4,LOG_2:1)
Block(-2,8,-4,LOG_2:1)
Block(7,9,-7,LOG_2:1)
Block(-2,9,-4,LOG_2:1)
Block(0,9,-5,LOG_2:1)
Block(3,11,-10,LOG_2:1)
Block(0,8,-5,LOG_2:1)
Block(3,10,-10,LOG_2:1)
Block(-2,4,-4,LOG_2:1)
Block(-2,5,-4,LOG_2:1)
Block(3,12,-10,LOG_2:1)
Block(1,12,-9,LOG_2:1)
Block(1,11,-9,LOG_2:1)
Block(1,10,-9,LOG_2:1)
Block(-4,7,-2,LOG_2:1)
Block(-4,6,-2,LOG_2:1)
Block(-4,3,-2,LOG_2:1)
Block(-4,2,-2,LOG_2:1)
Block(-4,5,-2,LOG_2:1)
Block(2,11,-8,LOG_2:1)
Block(-4,4,-2,LOG_2:1)
Block(2,10,-8,LOG_2:1)
Block(-1,9,-6,LOG_2:1)
Block(2,12,-8,LOG_2:1)
Block(-1,8,-6,LOG_2:1)
Block(-1,7,-6,WEB)
Block(0,12,-9,LOG_2:1)
Block(0,11,-9,LOG_2:1)
Block(4,11,-11,LOG_2:1)
Block(0,10,-9,LOG_2:1)
Block(-4,1,-2,LOG_2:1)
Block(4,12,-11,LEAVES_2:1)
Block(-4,0,-2,LOG_2:1)
Block(13,-1,-7,LOG_2:1)
Block(13,-2,-7,LOG_2:1)
Block(13,-3,-7,LOG_2:1)
Block(13,-2,-5,LOG_2:1)
Block(9,4,-7,LOG_2:1)
Block(13,-1,-5,LOG_2:1)
Block(9,3,-7,LOG_2:1)
Block(9,6,-7,LOG_2:1)
Block(9,5,-7,LOG_2:1)
Block(12,-2,-6,LOG_2:1)
Block(14,-2,-4,LOG_2:1)
Block(-2,0,-1,LOG_2:1)
Block(4,10,-7,LOG_2:1)
Block(12,-1,-6,LOG_2:1)
Block(14,-1,-4,LOG_2:1)
Block(4,12,-7,LOG_2:1)
Block(12,-3,-6,LOG_2:1)
Block(14,-3,-4,LOG_2:1)
Block(4,11,-7,LOG_2:1)
Block(9,8,-7,LOG_2:1)
Block(4,9,-9,LOG_2:1)
Block(9,7,-7,LOG_2:1)
Block(9,9,-7,LOG_2:1)
Block(0,10,-8,LOG_2:1)
Block(0,11,-8,LOG_2:1)
Block(0,12,-8,LOG_2:1)
Block(1,12,-7,LOG_2:1)
Block(15,-1,-6,LEAVES_2:13)
Block(14,2,-6,LOG_2:1)
Block(14,3,-6,LOG_2:1)
Block(14,0,-6,LOG_2:1)
Block(-2,4,-1,LOG_2:1)
Block(14,1,-6,LOG_2:1)
Block(-2,3,-1,LOG_2:1)
Block(-2,2,-1,LOG_2:1)
Block(-2,1,-1,LOG_2:1)
Block(-3,-1,-2,LOG_2:1)
Block(1,10,-7,LOG_2:1)
Block(1,11,-7,LOG_2:1)
Block(-3,-3,-2,LOG_2:1)
Block(-2,6,-1,LOG_2:1)
Block(5,11,-6,LEAVES_2:1)
Block(-3,-2,-2,LOG_2:1)
Block(-2,5,-1,LOG_2:1)
Block(-4,6,-5,LOG_2:1)
Block(-4,5,-5,LOG_2:1)
Block(-4,8,-5,LOG_2:1)
Block(-4,7,-5,LOG_2:1)
Block(-4,9,-5,LOG_2:1)
Block(16,-1,-5,LOG_2:1)
Block(3,11,-11,LOG_2:1)
Block(13,-3,-5,LOG_2:1)
Block(9,5,-8,LOG_2:1)
Block(2,10,-7,LOG_2:1)
Block(2,11,-7,LOG_2:1)
Block(15,-3,-5,LOG_2:1)
Block(2,12,-7,LOG_2:1)
Block(15,-2,-5,LOG_2:1)
Block(15,-1,-5,LOG_2:1)
Block(9,7,-8,LOG_2:1)
Block(0,9,-10,LEAVES_2:1)
Block(9,6,-8,LOG_2:1)
Block(4,9,-8,LOG_2:1)
Block(9,9,-8,LOG_2:1)
Block(9,8,-8,LOG_2:1)
Block(4,8,-8,LOG_2:1)
Block(-2,8,-2,LOG_2:1)
Block(4,10,-10,LOG_2:1)
Block(14,1,-7,LOG_2:1)
Block(-1,9,-9,LOG_2:1)
Block(14,2,-7,LOG_2:1)
Block(-2,3,-2,LOG_2:1)
Block(14,0,-7,LOG_2:1)
Block(-2,2,-2,LOG_2:1)
Block(14,-1,-5,LOG_2:1)
Block(4,11,-10,LOG_2:1)
Block(4,12,-10,LOG_2:1)
Block(-2,7,-2,LOG_2:1)
Block(-2,6,-2,LOG_2:1)
Block(-2,5,-2,LOG_2:1)
Block(-2,4,-2,LOG_2:1)
Block(13,-3,-6,LOG_2:1)
Block(-4,5,-4,LOG_2:1)
Block(13,-2,-6,LOG_2:1)
Block(-4,4,-4,LOG_2:1)
Block(13,-1,-6,LOG_2:1)
Block(-5,-1,-2,LOG_2:1)
Block(-4,7,-4,LOG_2:1)
Block(-6,-1,0,LOG_2:1)
Block(-4,6,-4,LOG_2:1)
Block(14,-3,-5,LOG_2:1)
Block(-6,-2,0,LOG_2:1)
Block(-6,-3,0,LOG_2:1)
Block(14,-2,-5,LOG_2:1)
Block(-4,3,-4,LOG_2:1)
Block(-4,8,-4,LOG_2:1)
Block(12,1,-4,LOG_2:1)
Block(10,-1,-7,LOG_2:9)
Block(10,-3,-7,LOG_2:1)
Block(10,-2,-7,LOG_2:1)
Block(12,2,-4,LOG_2:1)
Block(12,3,-4,LEAVES_2:13)
Block(-5,1,-2,LOG_2:1)
Block(-5,2,-2,LOG_2:1)
Block(-5,0,-2,LOG_2:1)
Block(9,9,-9,LOG_2:1)
Block(9,6,-9,LOG_2:1)
Block(9,8,-9,LOG_2:1)
Block(11,3,-9,LOG_2:1)
Block(9,7,-9,LOG_2:1)
Block(-5,5,-2,LOG_2:1)
Block(-5,6,-2,LOG_2:1)
Block(-5,3,-2,LOG_2:1)
Block(-5,4,-2,LOG_2:1)
Block(13,-1,-4,LOG_2:1)
Block(-1,5,-3,LOG_2:1)
Block(-1,6,0,LEAVES_2:1)
Block(4,11,-8,LOG_2:1)
Block(4,10,-8,LOG_2:1)
Block(4,12,-8,LOG_2:1)
Block(11,-3,-6,LOG_2:1)
Block(-1,7,-3,LOG_2:1)
Block(-4,-2,0,LOG_2:1)
Block(-4,-3,0,LOG_2:1)
Block(-4,-1,0,LOG_2:1)
Block(12,0,-5,LOG_2:1)
Block(15,1,-7,LEAVES_2:13)
Block(12,5,-5,LOG_2:1)
Block(12,1,-5,LOG_2:1)
Block(12,2,-5,LOG_2:1)
Block(12,3,-5,LOG_2:1)
Block(12,4,-5,LOG_2:1)
Block(-5,1,-3,LOG_2:1)
Block(-5,-1,-1,LOG_2:1)
Block(11,3,-8,LOG_2:1)
Block(11,4,-8,LOG_2:1)
Block(-4,-3,1,LOG_2:1)
Block(6,10,-10,LOG_2:1)
Block(-4,-2,1,LOG_2:1)
Block(6,9,-11,LOG_2:1)
Block(6,10,-7,LOG_2:1)
Block(-4,-1,1,LOG_2:1)
Block(6,11,-7,LOG_2:1)
Block(-5,4,-3,LOG_2:1)
Block(-5,5,-3,LOG_2:1)
Block(2,10,-10,LOG_2:1)
Block(-5,2,-3,LOG_2:1)
Block(2,11,-10,LOG_2:1)
Block(-5,3,-3,LOG_2:1)
Block(2,12,-10,LOG_2:1)
Block(13,-3,-4,LOG_2:1)
Block(-5,6,-3,LOG_2:1)
Block(13,-2,-4,LOG_2:1)
Block(-1,6,-2,LOG_2:1)
Block(-1,5,-2,LOG_2:1)
Block(2,9,-8,LOG_2:1)
Block(-1,4,-2,LOG_2:1)
Block(-4,7,-6,LOG_2:1)
Block(-4,6,-6,LOG_2:1)
Block(-4,9,-6,LEAVES_2:1)
Block(-4,8,-6,LOG_2:1)
Block(11,4,-9,LOG_2:1)
Block(1,12,-6,LOG_2:1)
Block(11,5,-9,LOG_2:1)
Block(-1,10,-4,LOG_2:1)
Block(11,6,-9,LOG_2:1)
Block(15,1,-6,LOG_2:1)
Block(11,9,-9,LEAVES_2:1)
Block(15,0,-6,LOG_2:1)
Block(12,4,-6,LOG_2:1)
Block(12,5,-6,LOG_2:1)
Block(12,6,-6,LOG_2:1)
Block(12,0,-6,LOG_2:1)
Block(12,1,-6,LOG_2:1)
Block(12,2,-6,LOG_2:1)
Block(12,3,-6,LOG_2:1)
Block(12,7,-7,LOG_2:1)
Block(2,10,-9,LOG_2:1)
Block(2,12,-9,LOG_2:1)
Block(2,11,-9,LOG_2:1)
Block(6,9,-8,LOG_2:1)
Block(11,0,-7,LEAVES_2:13)
Block(6,8,-8,LOG_2:1)
Block(11,1,-7,LOG_2:9)
Block(6,7,-8,LOG_2:1)
Block(11,2,-7,LOG_2:1)
Block(9,8,-10,LOG_2:1)
Block(11,3,-7,LOG_2:1)
Block(9,7,-10,LOG_2:1)
Block(11,4,-7,LOG_2:1)
Block(11,5,-7,LOG_2:1)
Block(6,8,-10,LOG_2:1)
Block(6,9,-10,LOG_2:1)
Block(6,6,-10,LEAVES_2:1)
Block(14,-1,-7,LOG_2:1)
Block(2,9,-9,WEB)
Block(-1,9,-5,LOG_2:1)
Block(-1,8,-5,LOG_2:1)
Block(-1,7,-5,LOG_2:1)
Block(16,1,-6,LEAVES_2:5)
Block(11,5,-8,LOG_2:1)
Block(11,6,-8,LOG_2:1)
Block(11,7,-8,LOG_2:1)
Block(-1,10,-6,LOG_2:1)
Block(-1,11,-6,LOG_2:1)
Block(15,1,-5,LOG_2:1)
Block(5,10,-11,LOG_2:1)
Block(15,0,-5,LOG_2:1)
Block(12,3,-7,LOG_2:1)
Block(12,4,-7,LOG_2:1)
Block(12,5,-7,LOG_2:1)
Block(12,6,-7,LOG_2:1)
Block(12,0,-7,LOG_2:1)
Block(12,1,-7,LOG_2:1)
Block(12,2,-7,LOG_2:1)
Block(-5,2,-1,LOG_2:1)
Block(12,6,-8,LOG_2:1)
Block(4,12,-9,LOG_2:1)
Block(-5,3,-1,LOG_2:1)
Block(4,11,-9,LOG_2:1)
Block(-5,0,-1,LOG_2:1)
Block(-5,1,-1,LOG_2:1)
Block(11,0,-6,LOG_2:1)
Block(11,1,-6,LOG_2:1)
Block(1,9,-9,LOG_2:1)
Block(6,9,-7,LOG_2:1)
Block(4,10,-9,LOG_2:1)
Block(11,2,-6,LOG_2:1)
Block(6,8,-7,LOG_2:1)
Block(11,3,-6,LOG_2:1)
Block(6,7,-7,LOG_2:1)
Block(11,4,-6,LOG_2:1)
Block(11,5,-6,LOG_2:1)
Block(11,6,-6,LOG_2:1)
Block(-1,11,-5,LOG_2:1)
Block(5,11,-10,LOG_2:1)
Block(5,10,-10,LOG_2:1)
Block(-1,10,-5,LOG_2:1)
Block(-2,-1,-1,LOG_2:1)
Block(-5,4,-1,LOG_2:1)
Block(-5,5,-1,LOG_2:1)
Block(-3,-1,0,LOG_2:1)
Block(-3,-2,0,LOG_2:1)
Block(8,10,-7,LOG_2:1)
Block(-3,-3,0,LOG_2:1)
Block(16,0,-5,LOG_2:1)
Block(-1,9,-4,LOG_2:1)
Block(-1,8,-4,LOG_2:1)
Block(-1,7,-4,LOG_2:1)
Block(-1,6,-4,LOG_2:1)
Block(15,0,-4,LOG_2:1)
Block(11,6,-7,LOG_2:1)
Block(11,7,-7,LOG_2:1)
Block(11,8,-7,LOG_2:1)
Block(6,11,-8,LOG_2:1)
Block(6,10,-8,LOG_2:1)
Block(12,2,-8,LOG_2:1)
Block(12,3,-8,LOG_2:1)
Block(2,11,-11,LOG_2:1)
Block(12,4,-8,LOG_2:1)
Block(12,5,-8,LOG_2:1)
Block(-3,7,-7,LOG_2:1)
Block(-3,8,-7,LOG_2:1)
Block(-3,9,-7,LOG_2:1)
Block(-3,1,0,LOG_2:1)
Block(-3,0,0,LOG_2:1)
Block(11,0,-5,LOG_2:1)
Block(11,1,-5,LOG_2:1)
Block(-2,11,-6,LOG_2:1)
Block(11,2,-5,LOG_2:1)
Block(11,3,-5,LOG_2:1)
Block(11,4,-5,LOG_2:1)
Block(11,5,-5,LOG_2:1)
Block(1,9,-8,LOG_2:1)
Block(11,6,-5,LOG_2:1)
Block(-2,10,-6,LOG_2:1)
Block(-6,4,-2,LOG_2:1)
Block(-6,3,-2,LOG_2:1)
Block(-5,9,-6,LEAVES_2:1)
Block(6,11,-9,LOG_2:1)
Block(-6,2,-2,LOG_2:1)
Block(-6,1,-2,LOG_2:1)
Block(6,10,-9,LOG_2:1)
Block(-1,12,-7,LOG_2:1)
Block(-1,11,-7,LOG_2:1)
Block(-1,10,-7,LOG_2:1)
Block(-3,3,0,LOG_2:1)
Block(-3,2,0,LOG_2:1)
Block(-5,3,-6,LEAVES_2:1)
Block(-3,5,0,LOG_2:1)
Block(-3,4,0,LOG_2:1)
Block(8,9,-10,LOG_2:1)
Block(8,8,-10,LOG_2:1)
Block(7,10,-8,LOG_2:1)
Block(13,0,-4,LOG_2:1)
Block(7,11,-8,LOG_2:1)
Block(13,2,-4,LOG_2:1)
Block(13,1,-4,LOG_2:1)
Block(11,7,-6,LOG_2:1)
Block(11,8,-6,LOG_2:1)
Block(-3,5,-6,LOG_2:1)
Block(-3,6,-6,LOG_2:1)
Block(12,4,-9,LOG_2:1)
Block(8,6,-9,LOG_2:1)
Block(-3,7,-6,LOG_2:1)
Block(12,3,-9,LOG_2:1)
Block(8,7,-9,LOG_2:1)
Block(-3,8,-6,LOG_2:1)
Block(8,8,-9,LOG_2:1)
Block(5,9,-7,LOG_2:1)
Block(-3,9,-6,LOG_2:1)
Block(8,9,-9,LOG_2:1)
Block(5,8,-7,LOG_2:1)
Block(7,10,-9,LOG_2:1)
Block(8,10,-8,LOG_2:1)
Block(1,9,-7,LOG_2:1)
Block(-5,-3,0,LOG_2:1)
Block(-5,-2,0,LOG_2:1)
Block(-5,-1,0,LOG_2:1)
Block(-6,3,-1,LOG_2:1)
Block(-5,9,-7,LEAVES_2:1)
Block(-6,2,-1,LOG_2:1)
Block(-6,1,-1,LOG_2:1)
Block(-6,0,-1,LOG_2:1)
Block(-3,10,-6,LOG_2:1)
Block(13,1,-3,LOG_2:1)
Block(-3,4,-5,LOG_2:1)
Block(-3,5,-5,LOG_2:1)
Block(-3,6,-5,LOG_2:1)
Block(8,6,-8,LOG_2:1)
Block(-3,7,-5,LOG_2:1)
Block(8,7,-8,LOG_2:1)
Block(-3,8,-5,LOG_2:1)
Block(8,8,-8,LOG_2:1)
Block(-3,9,-5,LOG_2:1)
Block(5,8,-8,LOG_2:1)
Block(8,9,-8,LOG_2:1)
Block(5,9,-8,LOG_2:1)
Block(-4,4,0,LOG_2:1)
Block(-4,3,0,LOG_2:1)
Block(-4,2,0,LOG_2:1)
Block(-4,1,0,LOG_2:1)
Block(-4,5,0,LOG_2:1)
Block(-4,0,0,LOG_2:1)
Block(10,7,-8,LOG_2:1)
Block(-5,4,-4,LOG_2:1)
Block(10,6,-8,LOG_2:1)
Block(10,5,-8,LOG_2:1)
Block(10,4,-8,LOG_2:1)
Block(-5,7,-4,LOG_2:1)
Block(-5,5,-4,LOG_2:1)
Block(-5,6,-4,LOG_2:1)
Block(10,8,-8,LOG_2:1)
Block(13,2,-6,LOG_2:1)
Block(13,1,-6,LOG_2:1)
Block(-1,6,-1,LEAVES_2:5)
Block(13,4,-6,LOG_2:1)
Block(5,9,-9,LOG_2:1)
Block(13,3,-6,LOG_2:1)
Block(10,3,-8,LOG_2:1)
Block(13,5,-6,LOG_2:1)
Block(1,11,-10,LOG_2:1)
Block(13,0,-6,LOG_2:1)
Block(-2,11,-7,LOG_2:1)
Block(-2,10,-7,LOG_2:1)
Block(-3,3,-4,LOG_2:1)
Block(-3,4,-4,LOG_2:1)
Block(-3,5,-4,LOG_2:1)
Block(8,5,-7,LOG_2:1)
Block(-3,6,-4,LOG_2:1)
Block(8,6,-7,LOG_2:1)
Block(-3,7,-4,LOG_2:1)
Block(8,7,-7,LOG_2:1)
Block(-3,8,-4,LOG_2:1)
Block(8,8,-7,LOG_2:1)
Block(-3,9,-4,LOG_2:1)
Block(8,9,-7,LOG_2:1)
Block(5,8,-9,LOG_2:1)
Block(-3,10,-7,LOG_2:1)
Block(-2,10,-8,LOG_2:1)
Block(-2,11,-8,LOG_2:1)
Block(10,6,-9,LOG_2:1)
Block(-5,3,-5,LEAVES_2:1)
Block(10,5,-9,LOG_2:1)
Block(3,9,-8,LOG_2:1)
Block(10,4,-9,LOG_2:1)
Block(-5,6,-5,LOG_2:1)
Block(-5,7,-5,LOG_2:1)
Block(10,8,-9,LOG_2:1)
Block(-5,5,-5,LOG_2:1)
Block(10,7,-9,LOG_2:1)
Block(13,3,-5,LOG_2:1)
Block(13,2,-5,LOG_2:1)
Block(-5,-2,1,LOG_2:1)
Block(-5,-3,1,LOG_2:1)
Block(13,1,-5,LOG_2:1)
Block(-5,-1,1,LOG_2:1)
Block(13,0,-5,LOG_2:1)
Block(-3,3,-3,LOG_2:1)
Block(-3,4,-3,LOG_2:1)
Block(-3,5,-3,LOG_2:1)
Block(-1,12,-8,LOG_2:1)
Block(-3,6,-3,LOG_2:1)
Block(-1,11,-8,LOG_2:1)
Block(8,6,-6,LOG_2:1)
Block(-3,7,-3,LOG_2:1)
Block(-1,10,-8,LOG_2:1)
Block(8,7,-6,LOG_2:1)
Block(-3,8,-3,LOG_2:1)
Block(8,8,-6,LOG_2:1)
Block(-3,9,-3,LOG_2:1)
Block(8,9,-6,LOG_2:1)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#   BlockCheck(0,-1,0,GRASS,DIRT)  Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object
BlockCheck(0,-1,0,GRASS,DIRT,DIRT:2)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank

#######################################################################
# +-----------------------------------------------------------------+ #
# |                         EntityFunctions                         | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Forge only (this may have changed, check for updates).
# An EntityFunction spawns an entity instead of a block. The entity is spawned only once when the BO3 is spawned.
# Entities are persistent by default so they don't de-spawn when no player is near, they are only unloaded.
# Usage: Entity(x,y,z,mobName,groupSize,NameTagOrNBTFileName) or Entity(x,y,z,mobName,groupSize)
# Use /otg entities to get a list of entities that can be used as mobName, this includes entities added by other mods.
# NameTagOrNBTFileName can be either a nametag for the mob or an nbt file (such as mymobinfo.nbt or mymobinfo.txt).
# When using a text file you can use the same mob spawning parameters used with the /summon command to equip the
# entity and give it custom attributes etc. You can copy the DATA part of a summon command including surrounding 
# curly braces to a .txt file, for instance for: "/summon Skeleton x y z {DATA}"
