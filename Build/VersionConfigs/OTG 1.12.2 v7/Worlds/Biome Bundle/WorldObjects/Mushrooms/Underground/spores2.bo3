
#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: LordSmellyPants

# A short description of this BO3 object
Description: Converted version of the BO2 spores2

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: true

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: true

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: randomY

# The height limits for the BO3.
MinHeight: 21

MaxHeight: 32

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All 


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The B(s) the BO3 should spawn in.
SourceBlocks: AIR

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 40

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# B(x,y,z,id[.data][,nbtfile.nbt)
# RB(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RB(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
B(-2,-6,0,HUGE_MUSHROOM_1)
B(1,9,0,HUGE_MUSHROOM_1:10)
B(-2,-5,0,HUGE_MUSHROOM_1)
B(1,8,0,HUGE_MUSHROOM_1:10)
B(1,7,0,HUGE_MUSHROOM_1:10)
B(2,-5,0,HUGE_MUSHROOM_1)
B(2,-6,0,HUGE_MUSHROOM_1)
B(0,-5,-3,HUGE_MUSHROOM_1)
B(0,-6,-3,HUGE_MUSHROOM_1)
B(0,-3,-3,HUGE_MUSHROOM_1)
B(1,-3,0,HUGE_MUSHROOM_1)
B(0,-4,-3,HUGE_MUSHROOM_1)
B(2,-4,-1,HUGE_MUSHROOM_1)
B(2,-3,-1,HUGE_MUSHROOM_1)
B(-1,-3,0,HUGE_MUSHROOM_1)
B(-1,-4,0,HUGE_MUSHROOM_1)
B(-1,-5,0,HUGE_MUSHROOM_1)
B(-1,-6,0,HUGE_MUSHROOM_1)
B(0,5,-1,HUGE_MUSHROOM_1:10)
B(0,-2,-2,HUGE_MUSHROOM_1)
B(0,4,-1,HUGE_MUSHROOM_1:10)
B(0,7,-1,HUGE_MUSHROOM_1:10)
B(0,6,-1,HUGE_MUSHROOM_1:10)
B(0,8,-1,BROWN_MUSHROOM)
B(-1,-3,-2,HUGE_MUSHROOM_1)
B(-1,-4,-2,HUGE_MUSHROOM_1)
B(0,1,-1,HUGE_MUSHROOM_2:10)
B(0,0,-1,HUGE_MUSHROOM_2:10)
B(0,3,-1,HUGE_MUSHROOM_1:10)
B(0,2,-1,HUGE_MUSHROOM_2:10)
B(2,18,1,HUGE_MUSHROOM_1:7)
B(2,17,1,HUGE_MUSHROOM_1:7)
B(2,16,1,HUGE_MUSHROOM_1:7)
B(3,15,0,HUGE_MUSHROOM_1:10)
B(3,14,0,HUGE_MUSHROOM_1:10)
B(3,17,0,HUGE_MUSHROOM_1:7)
B(3,16,0,HUGE_MUSHROOM_1:10)
B(3,18,0,HUGE_MUSHROOM_1)
B(2,-6,-2,HUGE_MUSHROOM_1)
B(2,18,0,HUGE_MUSHROOM_1:4)
B(2,19,0,HUGE_MUSHROOM_1:1)
B(2,-5,-2,HUGE_MUSHROOM_1)
B(-1,-5,1,HUGE_MUSHROOM_1)
B(0,-4,1,HUGE_MUSHROOM_1)
B(0,-3,1,HUGE_MUSHROOM_1)
B(-2,-2,-3,RED_MUSHROOM)
B(4,19,0,HUGE_MUSHROOM_1:9)
B(4,18,0,HUGE_MUSHROOM_1:3)
B(1,12,0,BROWN_MUSHROOM)
B(-1,0,-1,BROWN_MUSHROOM)
B(1,11,0,HUGE_MUSHROOM_1:10)
B(2,18,-1,HUGE_MUSHROOM_1:1)
B(1,10,0,HUGE_MUSHROOM_1:10)
B(2,17,-1,HUGE_MUSHROOM_1:1)
B(2,14,-1,HUGE_MUSHROOM_1:10)
B(2,13,-1,HUGE_MUSHROOM_1:10)
B(2,16,-1,HUGE_MUSHROOM_1:1)
B(2,15,-1,BROWN_MUSHROOM)
B(2,12,-1,HUGE_MUSHROOM_1:10)
B(2,11,-1,HUGE_MUSHROOM_1:10)
B(1,-5,1,HUGE_MUSHROOM_1)
B(1,-6,1,HUGE_MUSHROOM_1)
B(1,-3,-1,HUGE_MUSHROOM_1)
B(4,18,1,HUGE_MUSHROOM_1:9)
B(1,-2,-1,HUGE_MUSHROOM_1)
B(4,16,1,HUGE_MUSHROOM_1:9)
B(4,17,1,HUGE_MUSHROOM_1:9)
B(3,18,1,HUGE_MUSHROOM_1:7)
B(-2,-3,-1,HUGE_MUSHROOM_1)
B(3,19,1,HUGE_MUSHROOM_1:7)
B(-2,-4,-1,HUGE_MUSHROOM_1)
B(4,17,-1,HUGE_MUSHROOM_1:3)
B(4,18,-1,HUGE_MUSHROOM_1:3)
B(1,0,-1,BROWN_MUSHROOM)
B(4,16,-1,HUGE_MUSHROOM_1:3)
B(0,-1,-1,HUGE_MUSHROOM_1)
B(-1,-2,-1,HUGE_MUSHROOM_1)
B(3,18,-1,HUGE_MUSHROOM_1:1)
B(3,19,-1,HUGE_MUSHROOM_1:1)
B(0,-3,0,HUGE_MUSHROOM_1)
B(0,-2,0,HUGE_MUSHROOM_1)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#   BlockCheck(0,-1,0,GRASS,DIRT)  Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,0,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object
BlockCheck(0,-1,0,STONE)
#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WBR(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
