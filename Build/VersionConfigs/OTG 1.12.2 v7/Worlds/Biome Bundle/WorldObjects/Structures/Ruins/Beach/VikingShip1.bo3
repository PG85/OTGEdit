
#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: LordSmellyPants

# A short description of this BO3 object
Description: No description given

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: false

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 5.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: true

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestBlock

# The height limits for the BO3.
MinHeight: 0

MaxHeight: 63

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: AIR,STATIONARY_WATER,WATER

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 5

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
Block(-11,3,0,WOOD_STAIRS:4)
Block(-11,4,0,WOOD_STAIRS:0)
Block(-10,1,0,WOOD_STAIRS:4)
Block(-10,2,0,WOOD)
Block(-10,3,0,WOOD)
Block(-10,4,0,WOOD_STEP)
Block(-9,0,0,WOOD_STAIRS:4)
Block(-9,1,0,WOOD)
Block(-9,2,0,WOOD_STEP)
Block(-8,-1,0,WOOD_STAIRS:4)
Block(-8,0,-1,WOOD:1)
Block(-8,0,0,AIR)
Block(-8,0,1,WOOD:1)
Block(-8,1,-1,WOOD:1)
Block(-8,1,0,AIR)
Block(-8,1,1,WOOD:1)
Block(-8,2,-1,WOOD_STEP)
Block(-8,2,0,WOOD)
Block(-8,2,1,WOOD_STEP)
Block(-7,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(-7,-1,0,WOOD:1)
Block(-7,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(-7,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(-7,0,-1,WOOD_STAIRS:7)
RandomBlock(-7,1,-1,FURNACE:3,../../nbt/Misc/Furnace3.nbt,50,FURNACE:3,../../nbt/Misc/Furnace2.nbt,50,FURNACE:3,../../nbt/Misc/Furnace.nbt,100,AIR,100)
Block(-7,0,0,AIR)
Block(-7,0,1,AIR)
Block(-7,0,2,SPRUCE_WOOD_STAIRS:7)
Block(-7,1,-2,WOOD:1)
Block(-7,1,0,AIR)
Block(-7,1,1,AIR)
Block(-7,1,2,WOOD:1)
Block(-7,2,-2,WOOD_STEP)
Block(-7,2,-1,WOOD_STAIRS:7)
Block(-7,2,0,AIR)
Block(-7,2,1,WOOD_STAIRS:6)
Block(-7,2,2,WOOD_STEP)
Block(-7,3,0,WOOD_STEP)
Block(-6,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(-6,-1,0,WOOD:1)
Block(-6,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(-6,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(-6,0,-1,WOOD_STAIRS:7)
Block(-6,0,0,AIR)
Block(-6,0,1,AIR)
Block(-6,0,2,SPRUCE_WOOD_STAIRS:7)
Block(-6,1,-2,WOOD:1)
Block(-6,1,0,AIR)
Block(-6,1,1,AIR)
Block(-6,1,2,WOOD:1)
Block(-6,2,-2,WOOD_STEP)
Block(-6,2,-1,WOOD_STAIRS:7)
Block(-6,2,0,AIR)
Block(-6,2,1,WOOD_STAIRS:6)
Block(-6,2,2,WOOD_STEP)
Block(-6,3,0,WOOD_STEP)
Block(-5,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(-5,-1,0,WOOD:1)
Block(-5,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(-5,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(-5,0,-1,WOOD:1)
Block(-5,0,0,AIR)
Block(-5,0,1,WOOD:1)
Block(-5,0,2,SPRUCE_WOOD_STAIRS:7)
Block(-5,1,-2,WOOD:1)
Block(-5,1,-1,WOOD)
Block(-5,1,0,AIR)
Block(-5,1,1,WOOD)
Block(-5,1,2,WOOD:1)
Block(-5,2,-2,WOOD_STEP)
Block(-5,2,-1,WOOD)
Block(-5,2,0,AIR)
Block(-5,2,1,WOOD)
Block(-5,2,2,WOOD_STEP)
Block(-5,3,0,WOOD_STEP)
Block(-4,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(-4,-1,0,WOOD:1)
Block(-4,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(-4,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(-4,0,-1,WOOD:1)
Block(-4,0,0,WOOD_STAIRS:0)
Block(-4,0,1,WOOD:1)
Block(-4,0,2,SPRUCE_WOOD_STAIRS:7)
Block(-4,1,-2,WOOD:1)
Block(-4,1,-1,WOOD_STAIRS:1)
Block(-4,1,0,AIR)
Block(-4,1,1,WOOD_STAIRS:1)
Block(-4,1,2,WOOD:1)
Block(-4,2,-1,WOOD_STAIRS:5)
Block(-4,2,0,AIR)
Block(-4,2,1,WOOD_STAIRS:5)
Block(-4,3,0,WOOD_STEP)
Block(-3,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(-3,-1,0,WOOD:1)
Block(-3,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(-3,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(-3,0,-1,WOOD:1)
Block(-3,0,0,WOOD:1)
Block(-3,0,1,WOOD:1)
Block(-3,0,2,SPRUCE_WOOD_STAIRS:7)
Block(-3,1,-2,WOOD:1)
Block(-3,1,2,WOOD:1)
Block(-2,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(-2,-1,0,WOOD:1)
Block(-2,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(-2,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(-2,0,-1,WOOD:1)
Block(-2,0,0,WOOD:2)
Block(-2,0,1,WOOD:1)
Block(-2,0,2,SPRUCE_WOOD_STAIRS:7)
Block(-2,1,-2,WOOD:1)
Block(-2,1,2,WOOD:1)
Block(-2,12,0,WOOD:2)
Block(-2,13,0,FENCE)
Block(-1,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(-1,-1,0,WOOD:1)
Block(-1,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(-1,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(-1,0,-1,WOOD:1)
Block(-1,0,0,WOOD:1)
Block(-1,0,1,WOOD:1)
Block(-1,0,2,SPRUCE_WOOD_STAIRS:7)
Block(-1,1,-2,WOOD:1)
Block(-1,1,0,WOOD:2)
Block(-1,1,2,WOOD:1)
Block(-1,2,0,WOOD:2)
Block(-1,3,0,WOOD:2)
Block(-1,4,0,WOOD:2)
Block(-1,5,0,WOOD:2)
Block(-1,6,0,WOOD:2)
Block(-1,7,0,WOOD:2)
Block(-1,8,0,WOOD:2)
Block(-1,9,0,WOOD:2)
Block(-1,10,-4,WOOD:2)
Block(-1,10,-3,WOOD:2)
Block(-1,10,-2,WOOD:2)
Block(-1,10,-1,WOOD:2)
Block(-1,10,0,WOOD:2)
Block(-1,10,1,WOOD:2)
Block(-1,10,2,WOOD:2)
Block(-1,10,3,WOOD:2)
Block(-1,10,4,WOOD:2)
Block(-1,11,0,WOOD:2)
Block(-1,12,-1,WOOD:2)
Block(-1,12,0,WOOD:2)
Block(-1,12,1,WOOD:2)
Block(-1,13,-1,FENCE)
Block(-1,13,1,FENCE)
Block(0,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(0,-1,0,WOOD:1)
Block(0,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(0,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(0,0,-1,WOOD:1)
Block(0,0,0,WOOD:2)
Block(0,0,1,WOOD:1)
Block(0,0,2,SPRUCE_WOOD_STAIRS:7)
Block(0,1,-2,WOOD:1)
Block(0,1,2,WOOD:1)
Block(0,6,-3,WOOL:4)
Block(0,6,-2,WOOL:4)
Block(0,6,-1,WOOL:4)
Block(0,6,0,WOOL:14)
Block(0,6,1,WOOL:4)
Block(0,6,2,WOOL:4)
Block(0,6,3,WOOL:4)
Block(0,10,-4,WOOL:4)
Block(0,10,-3,WOOL:4)
Block(0,10,-2,WOOL:4)
Block(0,10,-1,WOOL:4)
Block(0,10,0,WOOL:4)
Block(0,10,1,WOOL:4)
Block(0,10,2,WOOL:4)
Block(0,10,3,WOOL:4)
Block(0,10,4,WOOL:4)
Block(0,11,-3,WOOL:4)
Block(0,11,-2,WOOL:4)
Block(0,11,-1,WOOL:14)
Block(0,11,0,WOOL:14)
Block(0,11,1,WOOL:14)
Block(0,11,2,WOOL:4)
Block(0,11,3,WOOL:4)
Block(0,12,0,WOOD:2)
Block(0,13,0,FENCE)
Block(1,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(1,-1,0,WOOD:1)
Block(1,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(1,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(1,0,-1,WOOD:1)
Block(1,0,0,WOOD:1)
Block(1,0,1,WOOD:1)
Block(1,0,2,SPRUCE_WOOD_STAIRS:7)
Block(1,1,-2,WOOD:1)
Block(1,1,2,WOOD:1)
Block(1,7,-4,WOOL:4)
Block(1,7,-3,WOOL:4)
Block(1,7,-2,WOOL:4)
Block(1,7,-1,WOOL:14)
Block(1,7,0,WOOL:14)
Block(1,7,1,WOOL:14)
Block(1,7,2,WOOL:4)
Block(1,7,3,WOOL:4)
Block(1,7,4,WOOL:4)
Block(1,10,-4,WOOL:4)
Block(1,10,-3,WOOL:4)
Block(1,10,-2,WOOL:14)
Block(1,10,-1,WOOL:4)
Block(1,10,0,WOOL:14)
Block(1,10,1,WOOL:4)
Block(1,10,2,WOOL:14)
Block(1,10,3,WOOL:4)
Block(1,10,4,WOOL:4)
Block(2,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(2,-1,0,WOOD:1)
Block(2,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(2,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(2,0,-1,WOOD:1)
Block(2,0,0,WOOD:1)
Block(2,0,1,WOOD:1)
Block(2,0,2,SPRUCE_WOOD_STAIRS:7)
Block(2,1,-2,WOOD:1)
Block(2,1,2,WOOD:1)
Block(2,8,-4,WOOL:4)
Block(2,8,-3,WOOL:4)
Block(2,8,-2,WOOL:14)
Block(2,8,-1,WOOL:4)
Block(2,8,0,WOOL:14)
Block(2,8,1,WOOL:4)
Block(2,8,2,WOOL:14)
Block(2,8,3,WOOL:4)
Block(2,8,4,WOOL:4)
Block(2,9,-4,WOOL:4)
Block(2,9,-3,WOOL:14)
Block(2,9,-2,WOOL:14)
Block(2,9,-1,WOOL:14)
Block(2,9,0,WOOL:14)
Block(2,9,1,WOOL:14)
Block(2,9,2,WOOL:14)
Block(2,9,3,WOOL:14)
Block(2,9,4,WOOL:4)
Block(3,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(3,-1,0,WOOD:1)
Block(3,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(3,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(3,0,-1,WOOD:1)
Block(3,0,0,WOOD:1)
Block(3,0,1,WOOD:1)
Block(3,0,2,SPRUCE_WOOD_STAIRS:7)
Block(3,1,-2,WOOD:1)
Block(3,1,2,WOOD:1)
Block(4,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(4,-1,0,WOOD:1)
Block(4,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(4,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(4,0,-1,WOOD:1)
Block(4,0,0,WOOD:1)
Block(4,0,1,WOOD:1)
Block(4,0,2,SPRUCE_WOOD_STAIRS:7)
Block(4,1,-2,WOOD:1)
Block(4,1,2,WOOD:1)
Block(4,2,-2,WOOD_STEP)
Block(4,2,2,WOOD_STEP)
Block(5,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(5,-1,0,WOOD:1)
Block(5,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(5,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(5,0,-1,WOOD:1)
Block(5,0,0,WOOD:1)
Block(5,0,1,WOOD:1)
Block(5,0,2,SPRUCE_WOOD_STAIRS:7)
Block(5,1,-2,WOOD:1)
Block(5,1,2,WOOD:1)
Block(5,2,-2,WOOD_STEP)
Block(5,2,2,WOOD_STEP)
Block(6,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(6,-1,0,WOOD:1)
Block(6,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(6,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(6,0,-1,WOOD:1)
Block(6,0,0,WOOD:1)
Block(6,0,1,WOOD:1)
Block(6,0,2,SPRUCE_WOOD_STAIRS:7)
Block(6,1,-2,WOOD:1)
Block(6,1,2,WOOD:1)
Block(6,2,-2,WOOD_STEP)
Block(6,2,2,WOOD_STEP)
Block(7,-1,-1,SPRUCE_WOOD_STAIRS:6)
Block(7,-1,0,WOOD:1)
Block(7,-1,1,SPRUCE_WOOD_STAIRS:7)
Block(7,0,-2,SPRUCE_WOOD_STAIRS:6)
Block(7,0,-1,WOOD:1)
Block(7,0,0,WOOD:1)
Block(7,0,1,WOOD:1)
Block(7,0,2,SPRUCE_WOOD_STAIRS:7)
Block(7,1,-2,WOOD:1)
Block(7,1,-1,FENCE)
Block(7,1,0,WOOD_STEP:1)
Block(7,1,1,FENCE)
Block(7,1,2,WOOD:1)
Block(7,2,-2,WOOD_STEP)
Block(7,2,-1,FENCE)
Block(7,2,1,FENCE)
Block(7,2,2,WOOD_STEP)
Block(8,-1,0,WOOD_STAIRS:5)
Block(8,0,-1,WOOD:1)
Block(8,0,0,WOOD:1)
Block(8,0,1,WOOD:1)
Block(8,1,-1,WOOD:1)
Block(8,1,0,WOOD:1)
Block(8,1,1,WOOD:1)
Block(8,2,-1,WOOD_STEP)
Block(8,2,1,WOOD_STEP)
Block(9,0,0,WOOD_STAIRS:5)
Block(9,1,0,WOOD)
Block(9,2,0,WOOD_STEP)
Block(10,1,0,WOOD_STAIRS:5)
Block(10,2,0,WOOD)
Block(10,3,0,WOOD)
Block(10,4,0,WOOD_STEP)
Block(11,3,0,WOOD_STEP:8)
Block(11,4,0,WOOD_STAIRS:1)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#   BlockCheck(0,-1,0,GRASS,DIRT)  Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,0,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object 

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
