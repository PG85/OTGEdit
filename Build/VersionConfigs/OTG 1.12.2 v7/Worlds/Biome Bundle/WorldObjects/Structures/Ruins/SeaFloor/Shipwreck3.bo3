
#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: LordSmellyPants

# A short description of this BO3 object
Description: No description given

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: false

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: false

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestSolidBlock

# The height limits for the BO3.
MinHeight: 0

MaxHeight: 256

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The B(s) the BO3 should spawn in.
SourceBlocks: AIR

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 100

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# B(x,y,z,id[.data][,nbtfile.nbt)
# RB(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RB(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
B(-13,-2,5,STONE)
B(-13,-1,5,STONE)
B(-13,0,5,STONE)
B(-13,1,5,STONE)
B(-12,-2,4,STONE)
B(-12,-2,5,9)
B(-12,-2,6,STONE)
B(-12,-1,4,STONE)
B(-12,-1,5,9)
B(-12,-1,6,STONE)
B(-12,0,4,STONE)
B(-12,0,5,9)
B(-12,0,6,STONE)
B(-12,1,4,STONE)
B(-12,1,5,STONE)
B(-12,1,6,STONE)
B(-12,2,5,STONE)
B(-11,-2,3,STONE)
B(-11,-2,7,STONE)
B(-11,-2,8,STONE)
B(-11,-1,3,STONE)
B(-11,-1,4,9)
B(-11,-1,5,9)
B(-11,-1,6,9)
B(-11,-1,7,STONE)
B(-11,-1,8,STONE)
B(-11,0,3,STONE)
B(-11,0,4,9)
B(-11,0,5,9)
B(-11,0,6,9)
B(-11,0,7,STONE)
B(-11,0,8,STONE)
B(-11,1,3,STONE)
B(-11,1,4,STONE)
B(-11,1,5,STONE)
B(-11,1,6,STONE)
B(-11,1,7,STONE)
B(-11,1,8,STONE)
B(-11,2,4,STONE)
B(-11,2,5,STONE)
B(-11,2,6,STONE)
B(-11,3,5,STONE)
B(-10,-2,-1,WOOD)
B(-10,-2,7,STONE)
B(-10,-1,-1,WOOD:2)
B(-10,-1,1,WOOD:2)
B(-10,-1,2,WOOD:2)
B(-10,-1,3,STONE)
B(-10,-1,4,9)
B(-10,-1,5,9)
B(-10,-1,6,9)
B(-10,-1,7,STONE)
B(-10,-1,8,STONE)
B(-10,0,-1,WOOD:2)
B(-10,0,1,WOOD:2)
B(-10,0,2,WOOD:2)
B(-10,0,3,STONE)
B(-10,0,4,9)
B(-10,0,5,9)
B(-10,0,6,9)
B(-10,0,7,STONE)
B(-10,0,8,STONE)
B(-10,1,-1,WOOD:2)
B(-10,1,1,WOOD)
B(-10,1,2,WOOD)
B(-10,1,3,STONE)
B(-10,1,4,STONE)
B(-10,1,5,9)
B(-10,1,6,9)
B(-10,1,7,STONE)
B(-10,2,2,WOOD)
B(-10,2,4,STONE)
B(-10,2,5,9)
B(-10,2,6,9)
B(-10,2,7,STONE)
B(-10,3,4,STONE)
B(-10,3,5,STONE)
B(-10,3,6,STONE)
B(-10,4,2,WOOD)
B(-10,4,3,WOOD)
B(-10,4,4,STONE)
B(-10,4,5,STONE)
B(-10,4,6,STONE)
B(-10,5,2,WOOD)
B(-10,5,3,WOOD)
B(-9,-2,2,STONE)
B(-9,-2,4,STONE)
B(-9,-2,6,9)
B(-9,-2,7,9)
B(-9,-2,8,STONE)
B(-9,-1,2,STONE)
B(-9,-1,3,STONE)
B(-9,-1,4,STONE)
B(-9,-1,5,9)
B(-9,-1,6,9)
B(-9,-1,7,9)
B(-9,-1,8,STONE)
B(-9,0,2,STONE)
B(-9,0,3,STONE)
B(-9,0,4,STONE)
B(-9,0,5,9)
B(-9,0,6,9)
B(-9,0,7,9)
B(-9,0,8,STONE)
B(-9,1,2,STONE)
B(-9,1,3,STONE)
B(-9,1,4,STONE)
B(-9,1,5,STONE)
B(-9,1,6,9)
B(-9,1,7,STONE)
B(-9,1,8,STONE)
B(-9,2,4,STONE)
B(-9,2,5,9)
B(-9,2,6,9)
B(-9,2,7,STONE)
B(-9,3,1,WOOD:2)
B(-9,3,2,WOOD:2)
B(-9,3,3,WOOD)
B(-9,3,4,WOOD)
B(-9,3,5,9)
B(-9,3,6,9)
B(-9,3,7,STONE)
B(-9,4,1,WOOD)
B(-9,4,2,WOOD)
B(-9,4,4,WOOD:2)
B(-9,4,5,STONE)
B(-9,4,6,STONE)
B(-9,5,1,WOOD:2)
B(-9,5,2,WOOD)
B(-9,5,3,WOOD)
B(-9,5,4,WOOD)
B(-9,5,5,STONE)
B(-9,6,1,WOOD:2)
B(-9,6,2,WOOD:2)
B(-9,6,3,WOOD:2)
B(-9,6,4,WOOD)
B(-9,7,2,WOOD)
B(-9,7,3,WOOD)
B(-8,-2,-1,WOOD)
B(-8,-2,6,STONE)
B(-8,-2,7,STONE)
B(-8,-1,-1,WOOD:2)
B(-8,-1,4,STONE)
B(-8,-1,5,STONE)
B(-8,-1,6,STONE)
B(-8,-1,7,STONE)
B(-8,0,-1,WOOD:2)
B(-8,0,2,STONE)
B(-8,0,3,STONE)
B(-8,0,4,STONE)
B(-8,0,5,STONE)
B(-8,0,6,STONE)
B(-8,0,7,STONE)
B(-8,1,-1,WOOD)
B(-8,1,2,STONE)
B(-8,1,3,STONE)
B(-8,1,4,STONE)
B(-8,1,5,STONE)
B(-8,1,6,STONE)
B(-8,1,7,STONE)
B(-8,2,0,WOOD)
B(-8,2,1,WOOD:2)
B(-8,2,2,WOOD)
B(-8,2,3,WOOD)
B(-8,2,4,WOOD)
B(-8,2,5,WOOD)
B(-8,2,6,STONE)
B(-8,3,0,WOOD)
B(-8,3,5,WOOD)
B(-8,3,6,STONE)
B(-8,4,0,WOOD)
B(-8,4,5,WOOD)
B(-8,5,0,WOOD)
B(-8,5,5,WOOD)
B(-8,6,1,WOOD:2)
B(-8,6,4,WOOD:2)
B(-8,7,2,WOOD:2)
B(-8,7,3,WOOD)
B(-8,8,2,WOOD)
B(-8,8,3,WOOD)
B(-8,9,2,WOOD:2)
B(-8,9,3,WOOD:2)
B(-7,-2,-2,WOOD)
B(-7,-2,0,WOOD)
B(-7,-2,7,WOOD)
B(-7,-1,-2,WOOD:2)
B(-7,-1,0,WOOD)
B(-7,-1,7,WOOD)
B(-7,0,-2,WOOD:2)
B(-7,0,0,WOOD)
B(-7,0,1,WOOD)
B(-7,0,2,WOOD)
B(-7,0,4,WOOD)
B(-7,0,7,WOOD)
B(-7,1,-2,WOOD:2)
B(-7,1,0,WOOD)
B(-7,1,1,WOOD)
B(-7,1,2,WOOD:2)
B(-7,1,3,WOOD)
B(-7,1,4,WOOD)
B(-7,1,5,WOOD)
B(-7,1,7,WOOD)
B(-7,2,0,WOOD)
B(-7,2,5,WOOD)
B(-6,-2,0,WOOD)
B(-6,-2,5,WOOD)
B(-6,-1,0,WOOD)
B(-6,-1,3,WOOD)
B(-6,-1,5,WOOD)
B(-6,0,0,WOOD:2)
B(-6,0,1,WOOD:2)
B(-6,0,2,WOOD)
B(-6,0,3,WOOD:2)
B(-6,0,4,WOOD)
B(-6,0,5,WOOD)
B(-6,1,0,WOOD)
B(-6,1,5,WOOD:2)
B(-5,-4,2,WOOD:2)
B(-5,-3,0,WOOD:2)
B(-5,-3,1,WOOD:2)
B(-5,-3,2,WOOD:2)
B(-5,-2,2,WOOD:2)
B(-5,-1,1,9)
B(-5,-1,5,WOOD)
B(-5,0,0,9)
B(-5,0,1,9)
B(-5,0,2,WOOD:2)
B(-5,0,3,WOOD)
B(-5,0,5,WOOD)
B(-4,-4,0,WOOD)
B(-4,-4,1,WOOD:2)
B(-4,-3,-1,WOOD:2)
B(-4,-2,-1,WOOD)
B(-4,-1,-1,WOOD)
B(-4,-1,0,9)
B(-4,-1,2,9)
B(-4,0,0,9)
B(-4,0,1,9)
B(-4,0,2,WOOD)
B(-4,0,3,9)
B(-4,8,-4,WOOL)
B(-4,9,-4,WOOL:11)
B(-4,10,-4,WOOD)
B(-3,-4,-1,WOOD:2)
B(-3,-4,0,WOOD)
B(-3,-3,-2,WOOD:2)
B(-3,-2,-2,WOOD:2)
B(-3,-2,-1,9)
B(-3,-1,-2,WOOD)
B(-3,-1,-1,9)
B(-3,-1,0,9)
B(-3,-1,1,9)
B(-3,-1,2,9)
B(-3,-1,3,9)
B(-3,-1,4,9)
B(-3,0,-2,WOOD)
B(-3,0,-1,WOOD)
B(-3,0,0,WOOD)
B(-3,0,1,9)
B(-3,0,2,9)
B(-3,0,3,9)
B(-3,0,4,9)
B(-3,1,-2,WOOD)
B(-3,6,-3,WOOL:11)
B(-3,7,-3,WOOL)
B(-3,8,-3,WOOL)
B(-3,9,-3,WOOL)
B(-3,10,-3,WOOD)
B(-2,-4,-2,WOOD)
B(-2,-4,-1,WOOD)
B(-2,-4,1,WOOD:2)
B(-2,-4,2,WOOD:2)
B(-2,-4,3,WOOD:2)
B(-2,-3,-3,WOOD:2)
B(-2,-3,-2,WOOD)
B(-2,-3,-1,9)
B(-2,-3,0,9)
B(-2,-3,5,WOOD)
B(-2,-2,-3,WOOD)
B(-2,-2,-2,WOOD)
B(-2,-2,-1,9)
B(-2,-2,0,9)
B(-2,-2,3,9)
B(-2,-2,4,9)
B(-2,-2,5,WOOD)
B(-2,-1,-3,WOOD:2)
B(-2,-1,-2,WOOD)
B(-2,-1,-1,9)
B(-2,-1,0,9)
B(-2,-1,1,9)
B(-2,-1,2,9)
B(-2,-1,3,9)
B(-2,-1,4,9)
B(-2,-1,5,WOOD)
B(-2,0,-3,WOOD)
B(-2,0,-2,WOOD)
B(-2,0,-1,WOOD)
B(-2,0,0,WOOD)
B(-2,0,1,9)
B(-2,0,2,9)
B(-2,0,3,9)
B(-2,0,4,WOOD:2)
B(-2,1,-3,WOOD:2)
B(-2,7,-2,WOOL)
B(-2,8,-2,WOOL)
B(-2,9,-2,WOOL:11)
B(-2,10,-2,WOOD)
B(-1,-4,-3,WOOD)
B(-1,-4,-2,WOOD:2)
B(-1,-4,-1,WOOD:2)
B(-1,-4,0,WOOD:2)
B(-1,-4,2,WOOD:2)
B(-1,-4,3,WOOD)
B(-1,-3,-4,WOOD:2)
B(-1,-3,-2,9)
B(-1,-3,-1,9)
B(-1,-3,0,9)
B(-1,-3,4,WOOD:2)
B(-1,-3,5,WOOD)
B(-1,-2,-4,WOOD:2)
B(-1,-2,-3,9)
B(-1,-2,-2,9)
B(-1,-2,-1,9)
B(-1,-2,0,9)
B(-1,-2,1,9)
B(-1,-2,2,9)
B(-1,-2,3,9)
B(-1,-2,4,WOOD)
B(-1,-2,5,WOOD:2)
B(-1,-1,-4,WOOD)
B(-1,-1,-3,9)
B(-1,-1,-2,9)
B(-1,-1,-1,9)
B(-1,-1,0,9)
B(-1,-1,1,9)
B(-1,-1,2,9)
B(-1,-1,3,9)
B(-1,-1,4,WOOD:2)
B(-1,-1,5,WOOD)
B(-1,0,-4,WOOD)
B(-1,0,-3,WOOD)
B(-1,0,-2,WOOD:2)
B(-1,0,-1,WOOD)
B(-1,0,0,WOOD)
B(-1,0,1,WOOD)
B(-1,0,2,WOOD)
B(-1,0,3,WOOD)
B(-1,0,4,WOOD:2)
B(-1,1,-4,WOOD:2)
B(-1,1,0,WOOD)
B(-1,1,4,WOOD:2)
B(-1,2,0,WOOD)
B(-1,3,0,WOOD)
B(-1,4,0,WOOD)
B(-1,5,0,WOOD)
B(-1,8,-1,WOOL)
B(-1,9,-1,WOOL:11)
B(-1,10,-1,WOOD)
B(0,-4,-4,WOOD)
B(0,-4,-3,WOOD)
B(0,-4,-2,WOOD:2)
B(0,-4,-1,WOOD:2)
B(0,-4,0,WOOD)
B(0,-4,1,WOOD:2)
B(0,-3,-5,WOOD:2)
B(0,-3,0,9)
B(0,-3,1,WOOD:2)
B(0,-3,3,WOOD:2)
B(0,-2,-5,WOOD:2)
B(0,-2,-4,9)
B(0,-2,-3,9)
B(0,-2,-2,9)
B(0,-2,-1,9)
B(0,-2,0,9)
B(0,-2,1,9)
B(0,-2,2,9)
B(0,-2,3,WOOD)
B(0,-1,-5,WOOD:2)
B(0,-1,-4,9)
B(0,-1,-3,9)
B(0,-1,-2,9)
B(0,-1,-1,9)
B(0,-1,0,9)
B(0,-1,1,9)
B(0,-1,2,9)
B(0,-1,3,WOOD)
B(0,0,-5,WOOD:2)
B(0,0,-4,WOOD:2)
B(0,0,-3,WOOD:2)
B(0,0,-2,WOOD:2)
B(0,0,-1,WOOD:2)
B(0,0,0,WOOD)
B(0,0,1,WOOD)
B(0,0,2,WOOD)
B(0,0,3,WOOD)
B(0,1,-5,WOOD)
B(0,1,3,WOOD:2)
B(0,5,0,WOOD)
B(0,6,0,WOOD)
B(0,7,0,WOOD)
B(0,8,0,WOOD)
B(0,9,0,WOOD)
B(0,10,0,WOOD)
B(0,11,0,WOOD)
B(0,12,0,WOOD)
B(1,-4,-5,WOOD)
B(1,-4,-4,WOOD)
B(1,-4,-3,WOOD:2)
B(1,-4,-2,WOOD:2)
B(1,-4,-1,WOOD)
B(1,-4,0,WOOD:2)
B(1,-4,1,WOOD:2)
B(1,-3,-6,WOOD:2)
B(1,-3,0,9)
B(1,-3,1,WOOD)
B(1,-3,2,WOOD)
B(1,-2,-6,WOOD:2)
B(1,-2,-5,9)
B(1,-2,-4,9)
B(1,-2,-3,9)
B(1,-2,-2,9)
B(1,-2,-1,9)
B(1,-2,0,9)
B(1,-2,1,9)
B(1,-2,2,WOOD:2)
B(1,-1,-6,WOOD)
B(1,-1,-5,9)
B(1,-1,-4,9)
B(1,-1,-3,9)
B(1,-1,-2,9)
B(1,-1,-1,9)
B(1,-1,0,9)
B(1,-1,1,WOOD)
B(1,-1,2,WOOD:2)
B(1,0,-6,WOOD)
B(1,0,-5,WOOD)
B(1,0,-4,WOOD:2)
B(1,0,-3,WOOD)
B(1,0,-2,WOOD)
B(1,0,-1,WOOD)
B(1,0,0,WOOD)
B(1,0,1,WOOD:2)
B(1,0,2,WOOD)
B(1,1,-6,WOOD:2)
B(1,1,2,WOOD)
B(1,9,1,WOOL:11)
B(1,10,1,WOOD)
B(2,-4,-5,WOOD)
B(2,-4,-4,WOOD)
B(2,-4,-3,WOOD:2)
B(2,-4,-2,WOOD:2)
B(2,-4,-1,WOOD:2)
B(2,-4,0,WOOD)
B(2,-3,-6,WOOD)
B(2,-3,0,9)
B(2,-3,1,WOOD)
B(2,-2,-6,WOOD)
B(2,-2,-5,9)
B(2,-2,-4,9)
B(2,-2,-3,9)
B(2,-2,-2,9)
B(2,-2,-1,9)
B(2,-2,0,9)
B(2,-2,1,WOOD)
B(2,-1,-6,WOOD)
B(2,-1,-5,9)
B(2,-1,-4,9)
B(2,-1,-3,9)
B(2,-1,-2,9)
B(2,-1,-1,9)
B(2,-1,0,9)
B(2,-1,1,WOOD:2)
B(2,0,-6,WOOD)
B(2,0,-5,WOOD:2)
B(2,0,-4,WOOD:2)
B(2,0,-3,WOOD)
B(2,0,-2,WOOD)
B(2,0,-1,WOOD)
B(2,0,0,WOOD:2)
B(2,0,1,WOOD:2)
B(2,1,-6,WOOD:2)
B(2,1,1,WOOD)
B(2,5,2,WOOL:11)
B(2,6,2,WOOL)
B(2,7,2,WOOL)
B(2,8,2,WOOL)
B(2,9,2,WOOL:11)
B(2,10,2,WOOD)
B(3,-5,-5,WOOD)
B(3,-4,-5,WOOD)
B(3,-4,-4,WOOD:2)
B(3,-4,-3,WOOD:2)
B(3,-4,-2,WOOD:2)
B(3,-4,-1,WOOD)
B(3,-3,-6,WOOD)
B(3,-3,0,WOOD:2)
B(3,-2,-6,WOOD:2)
B(3,-2,-5,9)
B(3,-2,-4,9)
B(3,-2,-3,9)
B(3,-2,-2,9)
B(3,-2,-1,9)
B(3,-2,0,WOOD:2)
B(3,-1,-6,WOOD)
B(3,-1,-5,9)
B(3,-1,-4,9)
B(3,-1,-3,9)
B(3,-1,-2,9)
B(3,-1,-1,9)
B(3,-1,0,WOOD:2)
B(3,0,-6,WOOD:2)
B(3,0,-5,WOOD:2)
B(3,0,-4,WOOD)
B(3,0,-3,WOOD:2)
B(3,0,-2,WOOD)
B(3,0,-1,WOOD:2)
B(3,0,0,WOOD:2)
B(3,1,-6,WOOD:2)
B(3,1,0,WOOD)
B(3,6,3,WOOL:11)
B(3,7,3,WOOL)
B(3,8,3,WOOL)
B(3,9,3,WOOL)
B(3,10,3,WOOD)
B(4,-4,-5,WOOD:2)
B(4,-4,-4,WOOD)
B(4,-4,-3,WOOD:2)
B(4,-4,-2,WOOD:2)
B(4,-3,-6,WOOD:2)
RB(4,-3,-2,CHEST,../../nbt/VanillaLoot/desert_pyramid.nbt,50,CHEST,../../nbt/VanillaLoot/simple_dungeon.nbt,100)
B(4,-3,-1,WOOD)
B(4,-2,-6,WOOD)
B(4,-2,-5,9)
B(4,-2,-4,9)
B(4,-2,-3,9)
B(4,-2,-2,9)
B(4,-2,-1,WOOD)
B(4,-1,-6,WOOD)
B(4,-1,-5,9)
B(4,-1,-4,9)
B(4,-1,-3,9)
B(4,-1,-2,9)
B(4,-1,-1,WOOD)
B(4,0,-6,WOOD)
B(4,0,-5,WOOD)
B(4,0,-4,WOOD)
B(4,0,-3,WOOD)
B(4,0,-2,WOOD:2)
B(4,0,-1,WOOD:2)
B(4,1,-6,WOOD:2)
B(4,1,-1,WOOD)
B(4,9,4,WOOL:11)
B(4,10,4,WOOD)
B(5,-3,-5,WOOD:2)
B(5,-3,-4,WOOD)
B(5,-3,-3,WOOD:2)
B(5,-3,-2,WOOD)
B(5,-2,-5,WOOD:2)
B(5,-2,-4,WOOD:2)
B(5,-2,-3,WOOD)
B(5,-2,-2,WOOD:2)
B(5,-1,-5,WOOD)
B(5,-1,-4,WOOD)
B(5,-1,-3,WOOD)
B(5,-1,-2,WOOD:2)
B(5,0,-5,WOOD:2)
B(5,0,-4,WOOD:2)
B(5,0,-3,WOOD)
B(5,0,-2,WOOD:2)
B(5,1,-5,WOOD:2)
B(5,1,-4,WOOD)
B(5,1,-3,WOOD:2)
B(5,1,-2,WOOD:2)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#   BlockCheck(0,-1,0,GRASS,DIRT)  Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,0,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WBR(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
