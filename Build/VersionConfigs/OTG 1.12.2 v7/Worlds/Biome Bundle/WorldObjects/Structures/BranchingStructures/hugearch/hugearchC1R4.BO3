#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The descriptions in this file are true only for TerrainControl. They are not true for the Minecraft Worlds mod!
# Minecraft Worlds completely reimplemented BO3s, check the MCW documentation on the mc/mctcp forums for how to use BO3s with MCW
# or watch the video's on my YT channel at https://www.youtube.com/user/PeeGee85. You can check out the "Editing and importing schematics & BO3s" 
# series of video's, in part 2 I explain BO3s. 

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: LordSmellyPants

# A short description of this BO3 object


# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable

#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: false

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 40

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: true

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: randomY

# The height limits for the BO3.
MinHeight: 0

MaxHeight: 256

# Objects can have other objects attached to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All

#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The B(s) the BO3 should spawn in.
SourceBlocks: AIR

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 100

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway

#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# B(x,y,z,id[.data][,nbtfile.nbt)
# RB(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RB(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.

B(-8,5,-7,1)
B(-8,5,-6,1)
B(-8,5,-5,1)
B(-8,6,-7,1)
B(-8,6,-6,1)
B(-8,6,-5,1)
B(-8,6,-4,1)
B(-8,6,-3,1)
B(-8,6,-2,1)
B(-8,6,-1,1)
B(-8,7,-7,1)
B(-8,7,-6,1)
B(-8,7,-5,1)
B(-8,7,-4,1)
B(-8,7,-3,1)
B(-8,7,-2,1)
B(-8,7,-1,1)
B(-8,8,-7,1)
B(-8,8,-6,1)
B(-8,8,-5,1)
B(-8,8,-4,1)
B(-8,8,-3,1)
B(-8,8,-2,1)
B(-8,9,-7,1)
B(-8,9,-6,1)
B(-8,9,-5,1)
B(-8,9,-4,1)
B(-8,9,-3,1)
B(-8,10,-7,1)
B(-8,10,-6,1)
B(-8,10,-5,1)
B(-8,10,-4,1)
B(-8,10,-3,1)
B(-8,11,-7,1)
B(-8,11,-6,1)
B(-8,11,-5,1)
B(-8,11,-4,1)
B(-8,11,-3,1)
B(-8,12,-7,1)
B(-8,12,-6,1)
B(-8,12,-5,1)
B(-8,12,-4,1)
B(-8,12,-3,1)
B(-8,13,-7,1)
B(-8,13,-6,1)
B(-8,13,-5,1)
B(-8,13,-4,1)
B(-8,13,-3,1)
B(-8,14,-7,1)
B(-8,14,-6,1)
B(-8,14,-5,1)
B(-8,14,-4,1)
B(-8,14,-3,1)
B(-8,15,-7,1)
B(-8,15,-6,1)
B(-8,15,-5,1)
B(-8,15,-4,1)
B(-8,15,-3,1)
B(-8,16,-7,1)
B(-8,16,-6,1)
B(-8,16,-5,1)
B(-8,16,-4,1)
B(-8,16,-3,1)
B(-8,17,-7,1)
B(-8,17,-6,1)
B(-8,17,-5,1)
B(-8,17,-4,1)
B(-8,17,-3,1)
B(-8,18,-7,1)
B(-8,18,-6,1)
B(-8,18,-5,1)
B(-8,18,-4,1)
B(-8,18,-3,1)
B(-8,19,-7,1)
B(-8,19,-6,1)
B(-8,19,-5,1)
B(-8,19,-4,1)
B(-8,20,-7,1)
B(-8,20,-6,1)
B(-8,20,-5,1)
B(-8,20,-4,1)
B(-8,21,-7,1)
B(-8,21,-6,1)
B(-8,21,-5,1)
B(-8,21,-4,1)
B(-8,22,-7,1)
B(-8,22,-6,1)
B(-8,22,-5,1)
B(-8,23,-7,1)
B(-8,23,-6,3)
B(-8,23,-5,3)
B(-8,24,-7,3)
B(-8,24,-6,3)
B(-8,24,-5,3)
B(-8,25,-7,3)
B(-8,25,-6,3)
B(-8,25,-5,2)
B(-8,26,-7,3)
B(-8,26,-6,2)
B(-8,27,-7,2)
B(-7,4,-7,1)
B(-7,4,-6,1)
B(-7,4,-5,1)
B(-7,5,-7,1)
B(-7,5,-6,1)
B(-7,5,-5,1)
B(-7,5,-4,1)
B(-7,6,-7,1)
B(-7,6,-6,1)
B(-7,6,-5,1)
B(-7,6,-4,1)
B(-7,6,-3,1)
B(-7,6,-2,1)
B(-7,7,-7,1)
B(-7,7,-6,1)
B(-7,7,-5,1)
B(-7,7,-4,1)
B(-7,7,-3,1)
B(-7,8,-7,1)
B(-7,8,-6,1)
B(-7,8,-5,1)
B(-7,8,-4,1)
B(-7,8,-3,1)
B(-7,9,-7,1)
B(-7,9,-6,1)
B(-7,9,-5,1)
B(-7,9,-4,1)
B(-7,9,-3,1)
B(-7,10,-7,1)
B(-7,10,-6,1)
B(-7,10,-5,1)
B(-7,10,-4,1)
B(-7,10,-3,1)
B(-7,11,-7,1)
B(-7,11,-6,1)
B(-7,11,-5,1)
B(-7,11,-4,1)
B(-7,11,-3,1)
B(-7,12,-7,1)
B(-7,12,-6,1)
B(-7,12,-5,1)
B(-7,12,-4,1)
B(-7,13,-7,1)
B(-7,13,-6,1)
B(-7,13,-5,1)
B(-7,13,-4,1)
B(-7,14,-7,1)
B(-7,14,-6,1)
B(-7,14,-5,1)
B(-7,14,-4,1)
B(-7,15,-7,1)
B(-7,15,-6,1)
B(-7,15,-5,1)
B(-7,15,-4,1)
B(-7,16,-7,1)
B(-7,16,-6,1)
B(-7,16,-5,1)
B(-7,16,-4,1)
B(-7,17,-7,1)
B(-7,17,-6,1)
B(-7,17,-5,1)
B(-7,17,-4,1)
B(-7,18,-7,1)
B(-7,18,-6,1)
B(-7,18,-5,1)
B(-7,18,-4,1)
B(-7,19,-7,1)
B(-7,19,-6,1)
B(-7,19,-5,1)
B(-7,19,-4,1)
B(-7,20,-7,1)
B(-7,20,-6,1)
B(-7,20,-5,1)
B(-7,21,-7,1)
B(-7,21,-6,1)
B(-7,21,-5,1)
B(-7,22,-7,1)
B(-7,22,-6,1)
B(-7,23,-7,3)
B(-7,23,-6,3)
B(-7,24,-7,3)
B(-7,24,-6,3)
B(-7,25,-7,2)
B(-7,25,-6,3)
B(-7,26,-6,2)
B(-6,4,-7,1)
B(-6,5,-7,1)
B(-6,6,-7,1)
B(-6,6,-5,1)
B(-6,6,-4,1)
B(-6,6,-3,1)
B(-6,6,-2,1)
B(-6,7,-7,1)
B(-6,7,-6,1)
B(-6,7,-5,1)
B(-6,7,-4,1)
B(-6,7,-3,1)
B(-6,8,-7,1)
B(-6,8,-6,1)
B(-6,8,-5,1)
B(-6,8,-4,1)
B(-6,9,-7,1)
B(-6,9,-6,1)
B(-6,9,-5,1)
B(-6,9,-4,1)
B(-6,10,-7,1)
B(-6,10,-6,1)
B(-6,10,-5,1)
B(-6,10,-4,1)
B(-6,11,-7,1)
B(-6,11,-6,1)
B(-6,11,-5,1)
B(-6,11,-4,1)
B(-6,12,-7,1)
B(-6,12,-6,1)
B(-6,12,-5,1)
B(-6,12,-4,1)
B(-6,13,-7,1)
B(-6,13,-6,1)
B(-6,13,-5,1)
B(-6,14,-7,1)
B(-6,14,-6,1)
B(-6,14,-5,1)
B(-6,15,-7,1)
B(-6,15,-6,1)
B(-6,16,-7,1)
B(-6,16,-6,1)
B(-6,17,-7,1)
B(-6,17,-6,1)
B(-6,18,-7,1)
B(-6,18,-6,1)
B(-6,19,-7,1)
B(-6,19,-6,1)
B(-6,20,-7,1)
B(-6,20,-6,1)
B(-6,21,-7,1)
B(-6,21,-6,1)
B(-6,22,-7,1)
B(-6,22,-6,1)
B(-6,23,-7,3)
B(-6,24,-7,3)
B(-6,25,-7,2)
B(-5,6,-5,1)
B(-5,6,-4,1)
B(-5,6,-3,1)
B(-5,7,-7,1)
B(-5,7,-6,1)
B(-5,7,-5,1)
B(-5,7,-4,1)
B(-5,8,-7,1)
B(-5,8,-6,1)
B(-5,9,-7,1)
B(-5,9,-6,1)
B(-5,10,-7,1)
B(-5,10,-6,1)
B(-5,11,-7,1)
B(-5,11,-6,1)

# 

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#   BlockCheck(0,-1,0,GRASS,DIRT)  Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,0,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# WBR(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
Branch(16,0,0,hugearchC2R4,NORTH,100)
