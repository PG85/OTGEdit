
#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: LordSmellyPants

# A short description of this BO3 object
Description: No description given

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: true

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: false

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestSolidBlock

# The height limits for the BO3.
MinHeight: 63

MaxHeight: 256

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The B(s) the BO3 should spawn in.
SourceBlocks: AIR

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 100

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# B(x,y,z,id[.data][,nbtfile.nbt)
# RB(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RB(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
RB(-5,-3,0,45,10,45,100)
RB(-5,-2,0,45,10,45,100)
RB(-5,-1,0,45,10,45,100)
RB(-5,0,0,45,10,45,100)
RB(-5,1,0,45,10,45,100)
RB(-5,2,0,45,30,45,30,AIR,100)
B(-5,3,0,AIR)
B(-5,4,0,AIR)
RB(-4,-3,-1,45,10,45,100)
RB(-4,-3,0,45,10,45,100)
RB(-4,-2,-1,45,10,45,100)
RB(-4,-2,0,45,10,45,100)
RB(-4,-1,-1,45,10,45,100)
RB(-4,-1,0,45,10,45,100)
RB(-4,0,-1,45,10,45,100)
RB(-4,0,0,45,10,45,100)
B(-4,1,-1,AIR)
RB(-4,1,0,45,10,45,100)
B(-4,2,-1,AIR)
B(-4,2,0,AIR)
B(-4,3,-1,AIR)
B(-4,3,0,AIR)
B(-4,4,-1,AIR)
B(-4,4,0,AIR)
RB(-3,-3,-2,45,10,45,100)
RB(-3,-3,-1,45,10,45,100)
RB(-3,-3,0,45,10,45,100)
RB(-3,-3,1,45,10,45,100)
RB(-3,-2,-2,45,10,45,100)
RB(-3,-2,-1,45,10,45,100)
RB(-3,-2,0,45,10,45,100)
RB(-3,-2,1,45,10,45,100)
RB(-3,-1,-2,45,10,45,100)
B(-3,-1,-1,COBBLESTONE)
B(-3,-1,0,COBBLESTONE)
RB(-3,-1,1,45,10,45,100)
RB(-3,0,-2,45,10,45,100)
B(-3,0,-1,AIR)
RB(-3,0,1,45,10,45,100)
RB(-3,1,-2,45,10,45,100)
B(-3,1,-1,AIR)
B(-3,1,0,AIR)
RB(-3,1,1,45,10,45,100)
RB(-3,2,-2,45,30,45,30,AIR,100)
B(-3,2,-1,AIR)
B(-3,2,0,AIR)
RB(-3,2,1,45,30,45,30,AIR,100)
B(-3,3,-2,AIR)
B(-3,3,-1,AIR)
B(-3,3,0,AIR)
B(-3,3,1,AIR)
B(-3,4,-2,AIR)
B(-3,4,-1,AIR)
B(-3,4,0,AIR)
B(-3,4,1,AIR)
RB(-2,-3,-2,45,10,45,100)
RB(-2,-3,-1,45,10,45,100)
RB(-2,-3,0,45,10,45,100)
RB(-2,-3,1,45,10,45,100)
RB(-2,-3,2,45,10,45,100)
RB(-2,-2,-2,45,10,45,100)
RB(-2,-2,-1,45,10,45,100)
RB(-2,-2,0,45,10,45,100)
RB(-2,-2,1,45,10,45,100)
RB(-2,-2,2,45,10,45,100)
RB(-2,-1,-2,45,10,45,100)
B(-2,-1,-1,COBBLESTONE)
B(-2,-1,0,COBBLESTONE)
B(-2,-1,1,COBBLESTONE)
RB(-2,-1,2,45,10,45,100)
RB(-2,0,-2,45,10,45,100)
B(-2,0,-1,AIR)
B(-2,0,1,LEAVES:0)
RB(-2,0,2,45,30,45,30,AIR,100)
B(-2,1,-2,IRON_FENCE)
B(-2,1,-1,AIR)
B(-2,1,0,AIR)
B(-2,1,1,AIR)
B(-2,1,2,AIR)
B(-2,2,-2,AIR)
B(-2,2,-1,AIR)
B(-2,2,0,AIR)
B(-2,2,1,AIR)
B(-2,2,2,AIR)
B(-2,3,-2,AIR)
B(-2,3,-1,AIR)
B(-2,3,0,AIR)
B(-2,3,1,AIR)
B(-2,3,2,AIR)
B(-2,4,-2,AIR)
B(-2,4,-1,AIR)
B(-2,4,0,AIR)
B(-2,4,1,AIR)
B(-2,4,2,AIR)
RB(-1,-3,-3,45,10,45,100)
RB(-1,-3,-2,45,10,45,100)
RB(-1,-3,-1,45,10,45,100)
RB(-1,-3,0,CHEST,../../nbt/VanillaLoot/simple_dungeon.nbt,50,CHEST,../../nbt/VanillaLoot/stronghold_crossing.nbt,100)
RB(-1,-3,1,45,10,45,100)
RB(-1,-3,2,45,10,45,100)
RB(-1,-3,3,45,10,45,100)
RB(-1,-2,-3,45,10,45,100)
RB(-1,-2,-2,45,10,45,100)
RB(-1,-2,-1,45,10,45,100)
RB(-1,-2,1,45,10,45,100)
RB(-1,-2,2,45,10,45,100)
RB(-1,-2,3,45,10,45,100)
RB(-1,-1,-3,45,10,45,100)
B(-1,-1,-2,LOG)
B(-1,-1,-1,COBBLESTONE)
B(-1,-1,0,TRAP_DOOR:11)
B(-1,-2,0,AIR)
B(-1,-1,1,COBBLESTONE)
B(-1,-1,2,COBBLESTONE)
RB(-1,-1,3,45,10,45,100)
RB(-1,0,-3,45,10,45,100)
B(-1,0,-2,LEAVES:0)
B(-1,0,-1,AIR)
B(-1,0,0,LEAVES:0)
B(-1,0,1,LEAVES:0)
B(-1,0,2,LEAVES:0)
RB(-1,0,3,45,10,45,100)
RB(-1,1,-3,45,30,45,30,AIR,100)
B(-1,1,-2,AIR)
B(-1,1,-1,AIR)
B(-1,1,0,AIR)
B(-1,1,1,LEAVES:0)
B(-1,1,2,LEAVES:0)
RB(-1,1,3,45,10,45,100)
B(-1,2,-3,AIR)
B(-1,2,-2,AIR)
B(-1,2,-1,AIR)
B(-1,2,0,AIR)
B(-1,2,1,AIR)
B(-1,2,2,LEAVES:0)
RB(-1,2,3,45,10,45,100)
B(-1,3,-3,AIR)
B(-1,3,-2,AIR)
B(-1,3,-1,AIR)
B(-1,3,0,AIR)
B(-1,3,1,AIR)
B(-1,3,2,AIR)
B(-1,3,3,LEAVES:0)
B(-1,4,-3,AIR)
B(-1,4,-2,AIR)
B(-1,4,-1,AIR)
B(-1,4,0,AIR)
B(-1,4,1,AIR)
B(-1,4,2,AIR)
B(-1,4,3,AIR)
RB(0,-3,-4,45,10,45,100)
RB(0,-3,-3,45,10,45,100)
RB(0,-3,-2,45,10,45,100)
RB(0,-3,-1,45,10,45,100)
RB(0,-3,0,45,10,45,100)
RB(0,-3,1,45,10,45,100)
RB(0,-3,2,45,10,45,100)
RB(0,-3,3,45,10,45,100)
RB(0,-2,-4,45,10,45,100)
RB(0,-2,-3,45,10,45,100)
RB(0,-2,-2,45,10,45,100)
RB(0,-2,-1,45,10,45,100)
RB(0,-2,0,45,10,45,100)
RB(0,-2,1,45,10,45,100)
RB(0,-2,2,45,10,45,100)
RB(0,-2,3,45,10,45,100)
RB(0,-1,-4,45,10,45,100)
B(0,-1,-3,COBBLESTONE)
B(0,-1,-2,DIRT)
RB(0,-1,-1,45,10,45,100)
RB(0,-1,0,45,10,45,100)
B(0,-1,1,COBBLESTONE)
B(0,-1,2,DIRT)
RB(0,-1,3,45,10,45,100)
RB(0,0,-4,45,10,45,100)
B(0,0,-3,AIR)
B(0,0,-2,AIR)
B(0,0,-1,AIR)
B(0,0,0,AIR)
B(0,0,1,AIR)
B(0,0,2,AIR)
B(0,0,3,AIR)
RB(0,1,-4,45,10,45,100)
B(0,1,-3,AIR)
B(0,1,-2,AIR)
B(0,1,-1,AIR)
B(0,1,0,AIR)
B(0,1,1,AIR)
B(0,1,2,AIR)
RB(0,1,3,45,10,45,100)
RB(0,2,-4,45,30,45,30,AIR,100)
B(0,2,-3,AIR)
B(0,2,-2,AIR)
B(0,2,-1,AIR)
B(0,2,0,AIR)
B(0,2,1,AIR)
B(0,2,2,AIR)
B(0,2,3,LEAVES:0)
B(0,3,-4,AIR)
B(0,3,-3,AIR)
B(0,3,-2,AIR)
B(0,3,-1,AIR)
B(0,3,0,AIR)
B(0,3,1,AIR)
B(0,3,2,AIR)
B(0,3,3,AIR)
B(0,4,-4,AIR)
B(0,4,-3,AIR)
B(0,4,-2,AIR)
B(0,4,-1,AIR)
B(0,4,0,AIR)
B(0,4,1,AIR)
B(0,4,2,AIR)
B(0,4,3,AIR)
RB(1,-3,-3,45,10,45,100)
RB(1,-3,-2,45,10,45,100)
RB(1,-3,-1,45,10,45,100)
RB(1,-3,0,45,10,45,100)
RB(1,-3,1,45,10,45,100)
RB(1,-3,2,45,10,45,100)
RB(1,-3,3,45,10,45,100)
RB(1,-2,-3,45,10,45,100)
RB(1,-2,-2,45,10,45,100)
RB(1,-2,-1,45,10,45,100)
RB(1,-2,0,45,10,45,100)
RB(1,-2,1,45,10,45,100)
RB(1,-2,2,45,10,45,100)
RB(1,-2,3,45,10,45,100)
RB(1,-1,-3,45,10,45,100)
B(1,-1,-2,DIRT)
B(1,-1,-1,COBBLESTONE)
B(1,-1,0,COBBLESTONE)
B(1,-1,1,DIRT)
B(1,-1,2,GRASS)
RB(1,-1,3,45,10,45,100)
B(1,0,-3,44:4)
B(1,0,-2,AIR)
B(1,0,-1,AIR)
B(1,0,0,AIR)
B(1,0,1,AIR)
B(1,0,2,AIR)
RB(1,0,3,45,10,45,100)
B(1,1,-3,AIR)
B(1,1,-2,AIR)
B(1,1,-1,AIR)
B(1,1,0,AIR)
B(1,1,1,AIR)
B(1,1,2,LEAVES:0)
RB(1,1,3,45,10,45,100)
B(1,2,-3,AIR)
B(1,2,-2,AIR)
B(1,2,-1,AIR)
B(1,2,0,AIR)
B(1,2,1,AIR)
B(1,2,2,AIR)
B(1,2,3,LEAVES:0)
B(1,3,-3,AIR)
B(1,3,-2,AIR)
B(1,3,-1,AIR)
B(1,3,0,AIR)
B(1,3,1,AIR)
B(1,3,2,AIR)
B(1,3,3,AIR)
B(1,4,-3,AIR)
B(1,4,-2,AIR)
B(1,4,-1,AIR)
B(1,4,0,AIR)
B(1,4,1,AIR)
B(1,4,2,AIR)
B(1,4,3,AIR)
RB(2,-3,-3,45,10,45,100)
RB(2,-3,-2,45,10,45,100)
RB(2,-3,-1,45,10,45,100)
RB(2,-3,0,45,10,45,100)
RB(2,-3,1,45,10,45,100)
RB(2,-3,2,45,10,45,100)
RB(2,-3,3,45,10,45,100)
RB(2,-2,-3,45,10,45,100)
RB(2,-2,-2,45,10,45,100)
RB(2,-2,-1,45,10,45,100)
RB(2,-2,0,45,10,45,100)
RB(2,-2,1,45,10,45,100)
RB(2,-2,2,45,10,45,100)
RB(2,-2,3,45,10,45,100)
RB(2,-1,-3,45,10,45,100)
B(2,-1,-2,COBBLESTONE)
B(2,-1,-1,LEAVES:0)
B(2,-1,0,DIRT)
B(2,-1,1,GRASS)
B(2,-1,2,DIRT)
RB(2,-1,3,45,10,45,100)
B(2,0,-3,AIR)
B(2,0,-2,AIR)
B(2,0,-1,AIR)
B(2,0,0,AIR)
B(2,0,1,LEAVES:0)
B(2,0,2,LOG)
RB(2,0,3,45,10,45,100)
B(2,1,-3,AIR)
B(2,1,-2,AIR)
B(2,1,-1,AIR)
B(2,1,0,AIR)
B(2,1,1,AIR)
B(2,1,2,LEAVES:0)
RB(2,1,3,45,10,45,100)
B(2,2,-3,AIR)
B(2,2,-2,AIR)
B(2,2,-1,AIR)
B(2,2,0,AIR)
B(2,2,1,AIR)
B(2,2,2,AIR)
B(2,2,3,LEAVES:0)
B(2,3,-3,AIR)
B(2,3,-2,AIR)
B(2,3,-1,AIR)
B(2,3,0,AIR)
B(2,3,1,AIR)
B(2,3,2,AIR)
B(2,3,3,AIR)
B(2,4,-3,AIR)
B(2,4,-2,AIR)
B(2,4,-1,AIR)
B(2,4,0,AIR)
B(2,4,1,AIR)
B(2,4,2,AIR)
B(2,4,3,AIR)
RB(3,-3,-4,45,10,45,100)
RB(3,-3,-3,45,10,45,100)
RB(3,-3,-2,45,10,45,100)
RB(3,-3,-1,45,10,45,100)
RB(3,-3,0,45,10,45,100)
RB(3,-3,1,45,10,45,100)
RB(3,-3,2,45,10,45,100)
RB(3,-3,3,45,10,45,100)
RB(3,-2,-4,45,10,45,100)
RB(3,-2,-3,45,10,45,100)
RB(3,-2,-2,45,10,45,100)
RB(3,-2,-1,45,10,45,100)
RB(3,-2,0,45,10,45,100)
RB(3,-2,1,45,10,45,100)
RB(3,-2,2,45,10,45,100)
RB(3,-2,3,45,10,45,100)
RB(3,-1,-4,45,10,45,100)
RB(3,-1,-3,45,10,45,100)
B(3,-1,-2,DIRT)
B(3,-1,-1,COBBLESTONE)
B(3,-1,0,DIRT)
B(3,-1,1,GRASS)
B(3,-1,2,GRASS)
RB(3,-1,3,45,10,45,100)
RB(3,0,-4,45,10,45,100)
B(3,0,-3,AIR)
B(3,0,-2,AIR)
B(3,0,-1,AIR)
B(3,0,0,AIR)
B(3,0,1,AIR)
B(3,0,2,LEAVES:0)
RB(3,0,3,45,10,45,100)
RB(3,1,-4,45,30,45,30,AIR,100)
B(3,1,-3,AIR)
B(3,1,-2,AIR)
B(3,1,-1,AIR)
B(3,1,0,AIR)
B(3,1,1,AIR)
B(3,1,2,AIR)
B(3,1,3,AIR)
B(3,2,-4,AIR)
B(3,2,-3,AIR)
B(3,2,-2,AIR)
B(3,2,-1,AIR)
B(3,2,0,AIR)
B(3,2,1,AIR)
B(3,2,2,AIR)
B(3,2,3,AIR)
B(3,3,-4,AIR)
B(3,3,-3,AIR)
B(3,3,-2,AIR)
B(3,3,-1,AIR)
B(3,3,0,AIR)
B(3,3,1,AIR)
B(3,3,2,AIR)
B(3,3,3,AIR)
B(3,4,-4,AIR)
B(3,4,-3,AIR)
B(3,4,-2,AIR)
B(3,4,-1,AIR)
B(3,4,0,AIR)
B(3,4,1,AIR)
B(3,4,2,AIR)
B(3,4,3,AIR)
RB(4,-3,-3,45,10,45,100)
RB(4,-3,-2,45,10,45,100)
RB(4,-3,-1,45,10,45,100)
RB(4,-3,0,45,10,45,100)
RB(4,-3,1,45,10,45,100)
RB(4,-3,2,45,10,45,100)
RB(4,-2,-3,45,10,45,100)
RB(4,-2,-2,45,10,45,100)
RB(4,-2,-1,45,10,45,100)
RB(4,-2,0,45,10,45,100)
RB(4,-2,1,45,10,45,100)
RB(4,-2,2,45,10,45,100)
RB(4,-1,-3,45,10,45,100)
B(4,-1,-2,STONE)
RB(4,-1,-1,45,10,45,100)
B(4,-1,0,COBBLESTONE)
B(4,-1,1,COBBLESTONE)
RB(4,-1,2,45,10,45,100)
RB(4,0,-3,45,10,45,100)
B(4,0,-2,STONE)
B(4,0,-1,AIR)
B(4,0,0,AIR)
B(4,0,1,AIR)
RB(4,0,2,45,10,45,100)
B(4,1,-3,44:4)
B(4,1,-2,AIR)
B(4,1,-1,AIR)
B(4,1,0,AIR)
B(4,1,1,AIR)
RB(4,1,2,45,10,45,100)
B(4,2,-3,AIR)
B(4,2,-2,AIR)
B(4,2,-1,AIR)
B(4,2,0,AIR)
B(4,2,1,AIR)
B(4,2,2,AIR)
B(4,3,-3,AIR)
B(4,3,-2,AIR)
B(4,3,-1,AIR)
B(4,3,0,AIR)
B(4,3,1,AIR)
B(4,3,2,AIR)
B(4,4,-3,AIR)
B(4,4,-2,AIR)
B(4,4,-1,AIR)
B(4,4,0,AIR)
B(4,4,1,AIR)
B(4,4,2,AIR)
RB(5,-3,-2,45,10,45,100)
RB(5,-3,-1,45,10,45,100)
RB(5,-3,0,45,10,45,100)
RB(5,-3,1,45,10,45,100)
RB(5,-2,-2,45,10,45,100)
RB(5,-2,-1,45,10,45,100)
RB(5,-2,0,45,10,45,100)
RB(5,-2,1,45,10,45,100)
RB(5,-1,-2,45,10,45,100)
B(5,-1,-1,COBBLESTONE)
B(5,-1,0,GRASS)
RB(5,-1,1,45,10,45,100)
RB(5,0,-2,45,10,45,100)
B(5,0,-1,AIR)
B(5,0,0,LONG_GRASS:1)
RB(5,0,1,45,30,45,30,AIR,100)
RB(5,1,-2,45,30,45,30,AIR,100)
B(5,1,-1,AIR)
B(5,1,0,AIR)
B(5,1,1,AIR)
B(5,2,-2,AIR)
B(5,2,-1,AIR)
B(5,2,0,AIR)
B(5,2,1,AIR)
B(5,3,-2,AIR)
B(5,3,-1,AIR)
B(5,3,0,AIR)
B(5,3,1,AIR)
B(5,4,-2,AIR)
B(5,4,-1,AIR)
B(5,4,0,AIR)
B(5,4,1,AIR)
RB(6,-3,-1,45,10,45,100)
RB(6,-3,0,45,10,45,100)
RB(6,-2,-1,45,10,45,100)
RB(6,-2,0,45,10,45,100)
B(6,-1,-1,GRAVEL)
RB(6,-1,0,45,10,45,100)
B(6,0,-1,AIR)
B(6,0,0,AIR)
B(6,1,-1,AIR)
B(6,1,0,AIR)
B(6,2,-1,AIR)
B(6,2,0,AIR)
B(6,3,-1,AIR)
B(6,3,0,AIR)
B(6,4,-1,AIR)
B(6,4,0,AIR)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#     Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,AIR)        Require any type of AIR just below the object
#   BlockCheck(0,-1,0,AIR:0)      Require white AIR just below the object
#   BlockCheckNot(0,0,0,AIR:0)   Require that there is no white AIR below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object 
BlockCheckNot(0,0,0,STATIONARY_WATER) 
BlockCheckNot(0,0,0,LOG) 
BlockCheck(0,-1,0,GRASS,DIRT,GRAVEL) 

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WBR(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
WBR(-6,0,0,BrickRuinsBasementGravel1x1,NORTH,1,BrickRuinsBasementWall1x1,NORTH,1,BrickRuinsBasementBushWall3x3,NORTH,1,BrickRuinsBasementBrickWallBush5x6,NORTH,1,BrickRuinsBasementCobble1x1,NORTH,1,5)
WBR(-6,0,-6,BrickRuinsBasementWall1x1,NORTH,1,BrickRuinsBasementBrickWall3x4,NORTH,1,BrickRuinsBasementGravel1x1,NORTH,1,BrickRuinsBasementBrickfloor4x5,NORTH,1,BrickRuinsBasementBrickFloor1x2,NORTH,1,5)
WBR(0,0,-6,BrickRuinsBasementTorch1x1,NORTH,1,BrickRuinsBasementBrickFloor1x2,NORTH,1,BrickRuinsBasementBrickWallBush5x6,NORTH,1,BrickRuinsBasementBrickWall3x3,NORTH,1,BrickRuinsBasementCobble1x1,NORTH,1,5)
WBR(6,0,0,BrickRuinsBasementGravelBush3x3,NORTH,1,BrickRuinsBasementWall2x3,NORTH,1,BrickRuinsBasementBushWall3x3,NORTH,1,BrickRuinsBasementWall1x1,NORTH,1,BrickRuinsBasementBrickFloor1x2,NORTH,1,5)
WBR(0,0,6,BrickRuinsBasementBrickFloor1x2,NORTH,1,BrickRuinsBasementBrickWall3x3,NORTH,1,BrickRuinsBasementCobblestone2x2,NORTH,1,BrickRuinsBasementTorch1x1,NORTH,1,BrickRuinsBasementGravel1x1,NORTH,1,5)
WBR(6,0,6,BrickRuinsBasementBrickfloor4x5,NORTH,1,BrickRuinsBasementCobble1x1,NORTH,1,BrickRuinsBasementCobblestone2x2,NORTH,1,BrickRuinsBasementGravel1x1,NORTH,1,BrickRuinsBasementWall2x3,NORTH,1,5)
WBR(-6,0,6,BrickRuinsBasementWall2x3,NORTH,1,BrickRuinsBasementBrickWall3x4,NORTH,1,BrickRuinsBasementCobble1x1,NORTH,1,BrickRuinsBasementCobblestone2x2,NORTH,1,BrickRuinsBasementTorch1x1,NORTH,1,5)
WBR(6,0,-6,BrickRuinsBasementGravel1x1,NORTH,1,BrickRuinsBasementGravelBush3x3,NORTH,1,BrickRuinsBasementTorch1x1,NORTH,1,BrickRuinsBasementWall1x1,NORTH,1,BrickRuinsBasementBrickWallBush5x6,NORTH,1,5)





